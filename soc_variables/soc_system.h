#ifndef _ALTERA_SOC_SYSTEM_H_
#define _ALTERA_SOC_SYSTEM_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file '../../../CODE_qsys/soc_system.sopcinfo'.
 */

/*
 * This file contains macros for all modules with masters in the system and
 * all the devices connected to those masters.
 * Macro names have unique prefixes to prevent duplicate names.
 */

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define ALT_VIP_VFR_VGA_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define ALT_VIP_VFR_VGA_HPS_0_AXI_SDRAM_BASE 0x0
#define ALT_VIP_VFR_VGA_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define ALT_VIP_VFR_VGA_HPS_0_AXI_SDRAM_END 0x7fffffff
#define ALT_VIP_VFR_VGA_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define ALT_VIP_VFR_VGA_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define ALT_VIP_VFR_VGA_HPS_0_AXI_SDRAM_WRITABLE 1
#define ALT_VIP_VFR_VGA_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define ALT_VIP_VFR_VGA_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define ALT_VIP_VFR_VGA_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define ALT_VIP_VFR_VGA_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define ALT_VIP_VFR_VGA_HPS_0_GMAC0_BASE 0xff700000
#define ALT_VIP_VFR_VGA_HPS_0_GMAC0_SPAN 8192
#define ALT_VIP_VFR_VGA_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define ALT_VIP_VFR_VGA_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define ALT_VIP_VFR_VGA_HPS_0_GMAC1_BASE 0xff702000
#define ALT_VIP_VFR_VGA_HPS_0_GMAC1_SPAN 8192
#define ALT_VIP_VFR_VGA_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define ALT_VIP_VFR_VGA_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define ALT_VIP_VFR_VGA_HPS_0_SDMMC_BASE 0xff704000
#define ALT_VIP_VFR_VGA_HPS_0_SDMMC_SPAN 4096
#define ALT_VIP_VFR_VGA_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define ALT_VIP_VFR_VGA_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define ALT_VIP_VFR_VGA_HPS_0_QSPI_BASE 0xff705000
#define ALT_VIP_VFR_VGA_HPS_0_QSPI_SPAN 256
#define ALT_VIP_VFR_VGA_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define ALT_VIP_VFR_VGA_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define ALT_VIP_VFR_VGA_HPS_0_FPGAMGR_BASE 0xff706000
#define ALT_VIP_VFR_VGA_HPS_0_FPGAMGR_SPAN 4096
#define ALT_VIP_VFR_VGA_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define ALT_VIP_VFR_VGA_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define ALT_VIP_VFR_VGA_HPS_0_GPIO0_BASE 0xff708000
#define ALT_VIP_VFR_VGA_HPS_0_GPIO0_SPAN 256
#define ALT_VIP_VFR_VGA_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define ALT_VIP_VFR_VGA_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define ALT_VIP_VFR_VGA_HPS_0_GPIO1_BASE 0xff709000
#define ALT_VIP_VFR_VGA_HPS_0_GPIO1_SPAN 256
#define ALT_VIP_VFR_VGA_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define ALT_VIP_VFR_VGA_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define ALT_VIP_VFR_VGA_HPS_0_GPIO2_BASE 0xff70a000
#define ALT_VIP_VFR_VGA_HPS_0_GPIO2_SPAN 256
#define ALT_VIP_VFR_VGA_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define ALT_VIP_VFR_VGA_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define ALT_VIP_VFR_VGA_HPS_0_L3REGS_BASE 0xff800000
#define ALT_VIP_VFR_VGA_HPS_0_L3REGS_SPAN 4096
#define ALT_VIP_VFR_VGA_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define ALT_VIP_VFR_VGA_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define ALT_VIP_VFR_VGA_HPS_0_NAND0_BASE 0xff900000
#define ALT_VIP_VFR_VGA_HPS_0_NAND0_SPAN 65536
#define ALT_VIP_VFR_VGA_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_USB0_COMPONENT_TYPE usb
#define ALT_VIP_VFR_VGA_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define ALT_VIP_VFR_VGA_HPS_0_USB0_BASE 0xffb00000
#define ALT_VIP_VFR_VGA_HPS_0_USB0_SPAN 262144
#define ALT_VIP_VFR_VGA_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_USB1_COMPONENT_TYPE usb
#define ALT_VIP_VFR_VGA_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define ALT_VIP_VFR_VGA_HPS_0_USB1_BASE 0xffb40000
#define ALT_VIP_VFR_VGA_HPS_0_USB1_SPAN 262144
#define ALT_VIP_VFR_VGA_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define ALT_VIP_VFR_VGA_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define ALT_VIP_VFR_VGA_HPS_0_DCAN0_BASE 0xffc00000
#define ALT_VIP_VFR_VGA_HPS_0_DCAN0_SPAN 4096
#define ALT_VIP_VFR_VGA_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define ALT_VIP_VFR_VGA_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define ALT_VIP_VFR_VGA_HPS_0_DCAN1_BASE 0xffc01000
#define ALT_VIP_VFR_VGA_HPS_0_DCAN1_SPAN 4096
#define ALT_VIP_VFR_VGA_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define ALT_VIP_VFR_VGA_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define ALT_VIP_VFR_VGA_HPS_0_UART0_BASE 0xffc02000
#define ALT_VIP_VFR_VGA_HPS_0_UART0_SPAN 256
#define ALT_VIP_VFR_VGA_HPS_0_UART0_END 0xffc020ff
#define ALT_VIP_VFR_VGA_HPS_0_UART0_FIFO_DEPTH 128
#define ALT_VIP_VFR_VGA_HPS_0_UART0_FIFO_HWFC 0
#define ALT_VIP_VFR_VGA_HPS_0_UART0_FIFO_MODE 1
#define ALT_VIP_VFR_VGA_HPS_0_UART0_FIFO_SWFC 0
#define ALT_VIP_VFR_VGA_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define ALT_VIP_VFR_VGA_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define ALT_VIP_VFR_VGA_HPS_0_UART1_BASE 0xffc03000
#define ALT_VIP_VFR_VGA_HPS_0_UART1_SPAN 256
#define ALT_VIP_VFR_VGA_HPS_0_UART1_END 0xffc030ff
#define ALT_VIP_VFR_VGA_HPS_0_UART1_FIFO_DEPTH 128
#define ALT_VIP_VFR_VGA_HPS_0_UART1_FIFO_HWFC 0
#define ALT_VIP_VFR_VGA_HPS_0_UART1_FIFO_MODE 1
#define ALT_VIP_VFR_VGA_HPS_0_UART1_FIFO_SWFC 0
#define ALT_VIP_VFR_VGA_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define ALT_VIP_VFR_VGA_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define ALT_VIP_VFR_VGA_HPS_0_I2C0_BASE 0xffc04000
#define ALT_VIP_VFR_VGA_HPS_0_I2C0_SPAN 256
#define ALT_VIP_VFR_VGA_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define ALT_VIP_VFR_VGA_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define ALT_VIP_VFR_VGA_HPS_0_I2C1_BASE 0xffc05000
#define ALT_VIP_VFR_VGA_HPS_0_I2C1_SPAN 256
#define ALT_VIP_VFR_VGA_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define ALT_VIP_VFR_VGA_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define ALT_VIP_VFR_VGA_HPS_0_I2C2_BASE 0xffc06000
#define ALT_VIP_VFR_VGA_HPS_0_I2C2_SPAN 256
#define ALT_VIP_VFR_VGA_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define ALT_VIP_VFR_VGA_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define ALT_VIP_VFR_VGA_HPS_0_I2C3_BASE 0xffc07000
#define ALT_VIP_VFR_VGA_HPS_0_I2C3_SPAN 256
#define ALT_VIP_VFR_VGA_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define ALT_VIP_VFR_VGA_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define ALT_VIP_VFR_VGA_HPS_0_TIMER0_BASE 0xffc08000
#define ALT_VIP_VFR_VGA_HPS_0_TIMER0_SPAN 256
#define ALT_VIP_VFR_VGA_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define ALT_VIP_VFR_VGA_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define ALT_VIP_VFR_VGA_HPS_0_TIMER1_BASE 0xffc09000
#define ALT_VIP_VFR_VGA_HPS_0_TIMER1_SPAN 256
#define ALT_VIP_VFR_VGA_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define ALT_VIP_VFR_VGA_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define ALT_VIP_VFR_VGA_HPS_0_SDRCTL_BASE 0xffc25000
#define ALT_VIP_VFR_VGA_HPS_0_SDRCTL_SPAN 4096
#define ALT_VIP_VFR_VGA_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define ALT_VIP_VFR_VGA_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define ALT_VIP_VFR_VGA_HPS_0_TIMER2_BASE 0xffd00000
#define ALT_VIP_VFR_VGA_HPS_0_TIMER2_SPAN 256
#define ALT_VIP_VFR_VGA_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define ALT_VIP_VFR_VGA_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define ALT_VIP_VFR_VGA_HPS_0_TIMER3_BASE 0xffd01000
#define ALT_VIP_VFR_VGA_HPS_0_TIMER3_SPAN 256
#define ALT_VIP_VFR_VGA_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define ALT_VIP_VFR_VGA_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define ALT_VIP_VFR_VGA_HPS_0_CLKMGR_BASE 0xffd04000
#define ALT_VIP_VFR_VGA_HPS_0_CLKMGR_SPAN 4096
#define ALT_VIP_VFR_VGA_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define ALT_VIP_VFR_VGA_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define ALT_VIP_VFR_VGA_HPS_0_RSTMGR_BASE 0xffd05000
#define ALT_VIP_VFR_VGA_HPS_0_RSTMGR_SPAN 256
#define ALT_VIP_VFR_VGA_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define ALT_VIP_VFR_VGA_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define ALT_VIP_VFR_VGA_HPS_0_SYSMGR_BASE 0xffd08000
#define ALT_VIP_VFR_VGA_HPS_0_SYSMGR_SPAN 1024
#define ALT_VIP_VFR_VGA_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define ALT_VIP_VFR_VGA_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define ALT_VIP_VFR_VGA_HPS_0_DMA_BASE 0xffe01000
#define ALT_VIP_VFR_VGA_HPS_0_DMA_SPAN 4096
#define ALT_VIP_VFR_VGA_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_SPIM0_COMPONENT_TYPE spi
#define ALT_VIP_VFR_VGA_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define ALT_VIP_VFR_VGA_HPS_0_SPIM0_BASE 0xfff00000
#define ALT_VIP_VFR_VGA_HPS_0_SPIM0_SPAN 256
#define ALT_VIP_VFR_VGA_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_SPIM1_COMPONENT_TYPE spi
#define ALT_VIP_VFR_VGA_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define ALT_VIP_VFR_VGA_HPS_0_SPIM1_BASE 0xfff01000
#define ALT_VIP_VFR_VGA_HPS_0_SPIM1_SPAN 256
#define ALT_VIP_VFR_VGA_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define ALT_VIP_VFR_VGA_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define ALT_VIP_VFR_VGA_HPS_0_TIMER_BASE 0xfffec600
#define ALT_VIP_VFR_VGA_HPS_0_TIMER_SPAN 256
#define ALT_VIP_VFR_VGA_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define ALT_VIP_VFR_VGA_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define ALT_VIP_VFR_VGA_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define ALT_VIP_VFR_VGA_HPS_0_ARM_GIC_0_SPAN 4096
#define ALT_VIP_VFR_VGA_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define ALT_VIP_VFR_VGA_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define ALT_VIP_VFR_VGA_HPS_0_L2_BASE 0xfffef000
#define ALT_VIP_VFR_VGA_HPS_0_L2_SPAN 4096
#define ALT_VIP_VFR_VGA_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'alt_vip_vfr_vga'.
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define ALT_VIP_VFR_VGA_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define ALT_VIP_VFR_VGA_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define ALT_VIP_VFR_VGA_HPS_0_AXI_OCRAM_SPAN 65536
#define ALT_VIP_VFR_VGA_HPS_0_AXI_OCRAM_END 0xffffffff
#define ALT_VIP_VFR_VGA_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define ALT_VIP_VFR_VGA_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define ALT_VIP_VFR_VGA_HPS_0_AXI_OCRAM_WRITABLE 1
#define ALT_VIP_VFR_VGA_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define ALT_VIP_VFR_VGA_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define ALT_VIP_VFR_VGA_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'pll_adc_reconfig', class 'altera_pll_reconfig'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PLL_ADC_RECONFIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PLL_ADC_RECONFIG_COMPONENT_TYPE altera_pll_reconfig
#define HPS_0_PLL_ADC_RECONFIG_COMPONENT_NAME pll_adc_reconfig
#define HPS_0_PLL_ADC_RECONFIG_BASE 0x0
#define HPS_0_PLL_ADC_RECONFIG_SPAN 256
#define HPS_0_PLL_ADC_RECONFIG_END 0xff

/*
 * Macros for device 'alt_vip_vfr_vga', class 'alt_vip_vfr'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_ALT_VIP_VFR_VGA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ALT_VIP_VFR_VGA_COMPONENT_TYPE alt_vip_vfr
#define HPS_0_ALT_VIP_VFR_VGA_COMPONENT_NAME alt_vip_vfr_vga
#define HPS_0_ALT_VIP_VFR_VGA_BASE 0x100
#define HPS_0_ALT_VIP_VFR_VGA_SPAN 128
#define HPS_0_ALT_VIP_VFR_VGA_END 0x17f

/*
 * Macros for device 'adc_fifo_mem_out_csr', class 'altera_avalon_fifo'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_ADC_FIFO_MEM_OUT_CSR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ADC_FIFO_MEM_OUT_CSR_COMPONENT_TYPE altera_avalon_fifo
#define HPS_0_ADC_FIFO_MEM_OUT_CSR_COMPONENT_NAME adc_fifo_mem
#define HPS_0_ADC_FIFO_MEM_OUT_CSR_BASE 0x200
#define HPS_0_ADC_FIFO_MEM_OUT_CSR_SPAN 32
#define HPS_0_ADC_FIFO_MEM_OUT_CSR_END 0x21f
#define HPS_0_ADC_FIFO_MEM_OUT_CSR_AVALONMM_AVALONMM_DATA_WIDTH 32
#define HPS_0_ADC_FIFO_MEM_OUT_CSR_AVALONMM_AVALONST_DATA_WIDTH 32
#define HPS_0_ADC_FIFO_MEM_OUT_CSR_BITS_PER_SYMBOL 16
#define HPS_0_ADC_FIFO_MEM_OUT_CSR_CHANNEL_WIDTH 0
#define HPS_0_ADC_FIFO_MEM_OUT_CSR_ERROR_WIDTH 0
#define HPS_0_ADC_FIFO_MEM_OUT_CSR_FIFO_DEPTH 8192
#define HPS_0_ADC_FIFO_MEM_OUT_CSR_SINGLE_CLOCK_MODE 0
#define HPS_0_ADC_FIFO_MEM_OUT_CSR_SYMBOLS_PER_BEAT 2
#define HPS_0_ADC_FIFO_MEM_OUT_CSR_USE_AVALONMM_READ_SLAVE 1
#define HPS_0_ADC_FIFO_MEM_OUT_CSR_USE_AVALONMM_WRITE_SLAVE 0
#define HPS_0_ADC_FIFO_MEM_OUT_CSR_USE_AVALONST_SINK 1
#define HPS_0_ADC_FIFO_MEM_OUT_CSR_USE_AVALONST_SOURCE 0
#define HPS_0_ADC_FIFO_MEM_OUT_CSR_USE_BACKPRESSURE 1
#define HPS_0_ADC_FIFO_MEM_OUT_CSR_USE_IRQ 0
#define HPS_0_ADC_FIFO_MEM_OUT_CSR_USE_PACKET 0
#define HPS_0_ADC_FIFO_MEM_OUT_CSR_USE_READ_CONTROL 1
#define HPS_0_ADC_FIFO_MEM_OUT_CSR_USE_REGISTER 0
#define HPS_0_ADC_FIFO_MEM_OUT_CSR_USE_WRITE_CONTROL 0

/*
 * Macros for device 'nmr_parameters_samples_per_echo', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_COMPONENT_NAME nmr_parameters_samples_per_echo
#define HPS_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_BASE 0x220
#define HPS_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_SPAN 16
#define HPS_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_END 0x22f
#define HPS_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_CAPTURE 0
#define HPS_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_DATA_WIDTH 32
#define HPS_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_DO_TEST_BENCH_WIRING 0
#define HPS_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_DRIVEN_SIM_VALUE 0
#define HPS_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_EDGE_TYPE NONE
#define HPS_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_FREQ 50000000
#define HPS_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_HAS_IN 0
#define HPS_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_HAS_OUT 1
#define HPS_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_HAS_TRI 0
#define HPS_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_IRQ_TYPE NONE
#define HPS_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_RESET_VALUE 255

/*
 * Macros for device 'ctrl_in', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_CTRL_IN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_CTRL_IN_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_CTRL_IN_COMPONENT_NAME ctrl_in
#define HPS_0_CTRL_IN_BASE 0x230
#define HPS_0_CTRL_IN_SPAN 16
#define HPS_0_CTRL_IN_END 0x23f
#define HPS_0_CTRL_IN_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_CTRL_IN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_CTRL_IN_CAPTURE 0
#define HPS_0_CTRL_IN_DATA_WIDTH 8
#define HPS_0_CTRL_IN_DO_TEST_BENCH_WIRING 0
#define HPS_0_CTRL_IN_DRIVEN_SIM_VALUE 0
#define HPS_0_CTRL_IN_EDGE_TYPE NONE
#define HPS_0_CTRL_IN_FREQ 50000000
#define HPS_0_CTRL_IN_HAS_IN 1
#define HPS_0_CTRL_IN_HAS_OUT 0
#define HPS_0_CTRL_IN_HAS_TRI 0
#define HPS_0_CTRL_IN_IRQ_TYPE NONE
#define HPS_0_CTRL_IN_RESET_VALUE 0

/*
 * Macros for device 'sw', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SW_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_SW_COMPONENT_NAME sw
#define HPS_0_SW_BASE 0x240
#define HPS_0_SW_SPAN 16
#define HPS_0_SW_END 0x24f
#define HPS_0_SW_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_SW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_SW_CAPTURE 0
#define HPS_0_SW_DATA_WIDTH 10
#define HPS_0_SW_DO_TEST_BENCH_WIRING 0
#define HPS_0_SW_DRIVEN_SIM_VALUE 0
#define HPS_0_SW_EDGE_TYPE NONE
#define HPS_0_SW_FREQ 50000000
#define HPS_0_SW_HAS_IN 1
#define HPS_0_SW_HAS_OUT 0
#define HPS_0_SW_HAS_TRI 0
#define HPS_0_SW_IRQ_TYPE NONE
#define HPS_0_SW_RESET_VALUE 0

/*
 * Macros for device 'ctrl_out', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_CTRL_OUT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_CTRL_OUT_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_CTRL_OUT_COMPONENT_NAME ctrl_out
#define HPS_0_CTRL_OUT_BASE 0x250
#define HPS_0_CTRL_OUT_SPAN 16
#define HPS_0_CTRL_OUT_END 0x25f
#define HPS_0_CTRL_OUT_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_CTRL_OUT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_CTRL_OUT_CAPTURE 0
#define HPS_0_CTRL_OUT_DATA_WIDTH 32
#define HPS_0_CTRL_OUT_DO_TEST_BENCH_WIRING 0
#define HPS_0_CTRL_OUT_DRIVEN_SIM_VALUE 0
#define HPS_0_CTRL_OUT_EDGE_TYPE NONE
#define HPS_0_CTRL_OUT_FREQ 50000000
#define HPS_0_CTRL_OUT_HAS_IN 0
#define HPS_0_CTRL_OUT_HAS_OUT 1
#define HPS_0_CTRL_OUT_HAS_TRI 0
#define HPS_0_CTRL_OUT_IRQ_TYPE NONE
#define HPS_0_CTRL_OUT_RESET_VALUE 119

/*
 * Macros for device 'led', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_LED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_LED_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_LED_COMPONENT_NAME led
#define HPS_0_LED_BASE 0x260
#define HPS_0_LED_SPAN 16
#define HPS_0_LED_END 0x26f
#define HPS_0_LED_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_LED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_LED_CAPTURE 0
#define HPS_0_LED_DATA_WIDTH 10
#define HPS_0_LED_DO_TEST_BENCH_WIRING 0
#define HPS_0_LED_DRIVEN_SIM_VALUE 0
#define HPS_0_LED_EDGE_TYPE NONE
#define HPS_0_LED_FREQ 50000000
#define HPS_0_LED_HAS_IN 0
#define HPS_0_LED_HAS_OUT 1
#define HPS_0_LED_HAS_TRI 0
#define HPS_0_LED_IRQ_TYPE NONE
#define HPS_0_LED_RESET_VALUE 1023

/*
 * Macros for device 'nmr_parameters_pulse_90deg', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NMR_PARAMETERS_PULSE_90DEG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NMR_PARAMETERS_PULSE_90DEG_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NMR_PARAMETERS_PULSE_90DEG_COMPONENT_NAME nmr_parameters_pulse_90deg
#define HPS_0_NMR_PARAMETERS_PULSE_90DEG_BASE 0x270
#define HPS_0_NMR_PARAMETERS_PULSE_90DEG_SPAN 16
#define HPS_0_NMR_PARAMETERS_PULSE_90DEG_END 0x27f
#define HPS_0_NMR_PARAMETERS_PULSE_90DEG_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NMR_PARAMETERS_PULSE_90DEG_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NMR_PARAMETERS_PULSE_90DEG_CAPTURE 0
#define HPS_0_NMR_PARAMETERS_PULSE_90DEG_DATA_WIDTH 32
#define HPS_0_NMR_PARAMETERS_PULSE_90DEG_DO_TEST_BENCH_WIRING 0
#define HPS_0_NMR_PARAMETERS_PULSE_90DEG_DRIVEN_SIM_VALUE 0
#define HPS_0_NMR_PARAMETERS_PULSE_90DEG_EDGE_TYPE NONE
#define HPS_0_NMR_PARAMETERS_PULSE_90DEG_FREQ 50000000
#define HPS_0_NMR_PARAMETERS_PULSE_90DEG_HAS_IN 0
#define HPS_0_NMR_PARAMETERS_PULSE_90DEG_HAS_OUT 1
#define HPS_0_NMR_PARAMETERS_PULSE_90DEG_HAS_TRI 0
#define HPS_0_NMR_PARAMETERS_PULSE_90DEG_IRQ_TYPE NONE
#define HPS_0_NMR_PARAMETERS_PULSE_90DEG_RESET_VALUE 16

/*
 * Macros for device 'nmr_parameters_pulse_180deg', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NMR_PARAMETERS_PULSE_180DEG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_COMPONENT_NAME nmr_parameters_pulse_180deg
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_BASE 0x280
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_SPAN 16
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_END 0x28f
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_CAPTURE 0
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_DATA_WIDTH 32
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_DO_TEST_BENCH_WIRING 0
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_DRIVEN_SIM_VALUE 0
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_EDGE_TYPE NONE
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_FREQ 50000000
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_HAS_IN 0
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_HAS_OUT 1
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_HAS_TRI 0
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_IRQ_TYPE NONE
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_RESET_VALUE 16

/*
 * Macros for device 'nmr_parameters_init_delay', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NMR_PARAMETERS_INIT_DELAY_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NMR_PARAMETERS_INIT_DELAY_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NMR_PARAMETERS_INIT_DELAY_COMPONENT_NAME nmr_parameters_init_delay
#define HPS_0_NMR_PARAMETERS_INIT_DELAY_BASE 0x290
#define HPS_0_NMR_PARAMETERS_INIT_DELAY_SPAN 16
#define HPS_0_NMR_PARAMETERS_INIT_DELAY_END 0x29f
#define HPS_0_NMR_PARAMETERS_INIT_DELAY_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NMR_PARAMETERS_INIT_DELAY_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NMR_PARAMETERS_INIT_DELAY_CAPTURE 0
#define HPS_0_NMR_PARAMETERS_INIT_DELAY_DATA_WIDTH 32
#define HPS_0_NMR_PARAMETERS_INIT_DELAY_DO_TEST_BENCH_WIRING 0
#define HPS_0_NMR_PARAMETERS_INIT_DELAY_DRIVEN_SIM_VALUE 0
#define HPS_0_NMR_PARAMETERS_INIT_DELAY_EDGE_TYPE NONE
#define HPS_0_NMR_PARAMETERS_INIT_DELAY_FREQ 50000000
#define HPS_0_NMR_PARAMETERS_INIT_DELAY_HAS_IN 0
#define HPS_0_NMR_PARAMETERS_INIT_DELAY_HAS_OUT 1
#define HPS_0_NMR_PARAMETERS_INIT_DELAY_HAS_TRI 0
#define HPS_0_NMR_PARAMETERS_INIT_DELAY_IRQ_TYPE NONE
#define HPS_0_NMR_PARAMETERS_INIT_DELAY_RESET_VALUE 0

/*
 * Macros for device 'nmr_parameters_echoes_per_scan', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NMR_PARAMETERS_ECHOES_PER_SCAN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NMR_PARAMETERS_ECHOES_PER_SCAN_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NMR_PARAMETERS_ECHOES_PER_SCAN_COMPONENT_NAME nmr_parameters_echoes_per_scan
#define HPS_0_NMR_PARAMETERS_ECHOES_PER_SCAN_BASE 0x2a0
#define HPS_0_NMR_PARAMETERS_ECHOES_PER_SCAN_SPAN 16
#define HPS_0_NMR_PARAMETERS_ECHOES_PER_SCAN_END 0x2af
#define HPS_0_NMR_PARAMETERS_ECHOES_PER_SCAN_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NMR_PARAMETERS_ECHOES_PER_SCAN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NMR_PARAMETERS_ECHOES_PER_SCAN_CAPTURE 0
#define HPS_0_NMR_PARAMETERS_ECHOES_PER_SCAN_DATA_WIDTH 32
#define HPS_0_NMR_PARAMETERS_ECHOES_PER_SCAN_DO_TEST_BENCH_WIRING 0
#define HPS_0_NMR_PARAMETERS_ECHOES_PER_SCAN_DRIVEN_SIM_VALUE 0
#define HPS_0_NMR_PARAMETERS_ECHOES_PER_SCAN_EDGE_TYPE NONE
#define HPS_0_NMR_PARAMETERS_ECHOES_PER_SCAN_FREQ 50000000
#define HPS_0_NMR_PARAMETERS_ECHOES_PER_SCAN_HAS_IN 0
#define HPS_0_NMR_PARAMETERS_ECHOES_PER_SCAN_HAS_OUT 1
#define HPS_0_NMR_PARAMETERS_ECHOES_PER_SCAN_HAS_TRI 0
#define HPS_0_NMR_PARAMETERS_ECHOES_PER_SCAN_IRQ_TYPE NONE
#define HPS_0_NMR_PARAMETERS_ECHOES_PER_SCAN_RESET_VALUE 0

/*
 * Macros for device 'nmr_parameters_delay_sig', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NMR_PARAMETERS_DELAY_SIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NMR_PARAMETERS_DELAY_SIG_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NMR_PARAMETERS_DELAY_SIG_COMPONENT_NAME nmr_parameters_delay_sig
#define HPS_0_NMR_PARAMETERS_DELAY_SIG_BASE 0x2b0
#define HPS_0_NMR_PARAMETERS_DELAY_SIG_SPAN 16
#define HPS_0_NMR_PARAMETERS_DELAY_SIG_END 0x2bf
#define HPS_0_NMR_PARAMETERS_DELAY_SIG_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NMR_PARAMETERS_DELAY_SIG_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NMR_PARAMETERS_DELAY_SIG_CAPTURE 0
#define HPS_0_NMR_PARAMETERS_DELAY_SIG_DATA_WIDTH 32
#define HPS_0_NMR_PARAMETERS_DELAY_SIG_DO_TEST_BENCH_WIRING 0
#define HPS_0_NMR_PARAMETERS_DELAY_SIG_DRIVEN_SIM_VALUE 0
#define HPS_0_NMR_PARAMETERS_DELAY_SIG_EDGE_TYPE NONE
#define HPS_0_NMR_PARAMETERS_DELAY_SIG_FREQ 50000000
#define HPS_0_NMR_PARAMETERS_DELAY_SIG_HAS_IN 0
#define HPS_0_NMR_PARAMETERS_DELAY_SIG_HAS_OUT 1
#define HPS_0_NMR_PARAMETERS_DELAY_SIG_HAS_TRI 0
#define HPS_0_NMR_PARAMETERS_DELAY_SIG_IRQ_TYPE NONE
#define HPS_0_NMR_PARAMETERS_DELAY_SIG_RESET_VALUE 16

/*
 * Macros for device 'nmr_parameters_delay_nosig', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NMR_PARAMETERS_DELAY_NOSIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_COMPONENT_NAME nmr_parameters_delay_nosig
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_BASE 0x2c0
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_SPAN 16
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_END 0x2cf
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_CAPTURE 0
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_DATA_WIDTH 32
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_DO_TEST_BENCH_WIRING 0
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_DRIVEN_SIM_VALUE 0
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_EDGE_TYPE NONE
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_FREQ 50000000
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_HAS_IN 0
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_HAS_OUT 1
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_HAS_TRI 0
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_IRQ_TYPE NONE
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_RESET_VALUE 16

/*
 * Macros for device 'adc_fifo_mem_out', class 'altera_avalon_fifo'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_ADC_FIFO_MEM_OUT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ADC_FIFO_MEM_OUT_COMPONENT_TYPE altera_avalon_fifo
#define HPS_0_ADC_FIFO_MEM_OUT_COMPONENT_NAME adc_fifo_mem
#define HPS_0_ADC_FIFO_MEM_OUT_BASE 0x2d0
#define HPS_0_ADC_FIFO_MEM_OUT_SPAN 8
#define HPS_0_ADC_FIFO_MEM_OUT_END 0x2d7
#define HPS_0_ADC_FIFO_MEM_OUT_AVALONMM_AVALONMM_DATA_WIDTH 32
#define HPS_0_ADC_FIFO_MEM_OUT_AVALONMM_AVALONST_DATA_WIDTH 32
#define HPS_0_ADC_FIFO_MEM_OUT_BITS_PER_SYMBOL 16
#define HPS_0_ADC_FIFO_MEM_OUT_CHANNEL_WIDTH 0
#define HPS_0_ADC_FIFO_MEM_OUT_ERROR_WIDTH 0
#define HPS_0_ADC_FIFO_MEM_OUT_FIFO_DEPTH 8192
#define HPS_0_ADC_FIFO_MEM_OUT_SINGLE_CLOCK_MODE 0
#define HPS_0_ADC_FIFO_MEM_OUT_SYMBOLS_PER_BEAT 2
#define HPS_0_ADC_FIFO_MEM_OUT_USE_AVALONMM_READ_SLAVE 1
#define HPS_0_ADC_FIFO_MEM_OUT_USE_AVALONMM_WRITE_SLAVE 0
#define HPS_0_ADC_FIFO_MEM_OUT_USE_AVALONST_SINK 1
#define HPS_0_ADC_FIFO_MEM_OUT_USE_AVALONST_SOURCE 0
#define HPS_0_ADC_FIFO_MEM_OUT_USE_BACKPRESSURE 1
#define HPS_0_ADC_FIFO_MEM_OUT_USE_IRQ 0
#define HPS_0_ADC_FIFO_MEM_OUT_USE_PACKET 0
#define HPS_0_ADC_FIFO_MEM_OUT_USE_READ_CONTROL 1
#define HPS_0_ADC_FIFO_MEM_OUT_USE_REGISTER 0
#define HPS_0_ADC_FIFO_MEM_OUT_USE_WRITE_CONTROL 0

/*
 * Macros for device 'nmr_parameters_delay_nosig_t1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NMR_PARAMETERS_DELAY_NOSIG_T1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_T1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_T1_COMPONENT_NAME nmr_parameters_delay_nosig_t1
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_T1_BASE 0x2e0
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_T1_SPAN 16
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_T1_END 0x2ef
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_T1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_T1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_T1_CAPTURE 0
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_T1_DATA_WIDTH 32
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_T1_DO_TEST_BENCH_WIRING 0
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_T1_DRIVEN_SIM_VALUE 0
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_T1_EDGE_TYPE NONE
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_T1_FREQ 50000000
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_T1_HAS_IN 0
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_T1_HAS_OUT 1
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_T1_HAS_TRI 0
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_T1_IRQ_TYPE NONE
#define HPS_0_NMR_PARAMETERS_DELAY_NOSIG_T1_RESET_VALUE 16

/*
 * Macros for device 'nmr_parameters_pulse_180deg_t1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NMR_PARAMETERS_PULSE_180DEG_T1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_T1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_T1_COMPONENT_NAME nmr_parameters_pulse_180deg_t1
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_T1_BASE 0x2f0
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_T1_SPAN 16
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_T1_END 0x2ff
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_T1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_T1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_T1_CAPTURE 0
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_T1_DATA_WIDTH 32
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_T1_DO_TEST_BENCH_WIRING 0
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_T1_DRIVEN_SIM_VALUE 0
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_T1_EDGE_TYPE NONE
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_T1_FREQ 50000000
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_T1_HAS_IN 0
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_T1_HAS_OUT 1
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_T1_HAS_TRI 0
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_T1_IRQ_TYPE NONE
#define HPS_0_NMR_PARAMETERS_PULSE_180DEG_T1_RESET_VALUE 16

/*
 * Macros for device 'pll_nmr_reconfig', class 'altera_pll_reconfig'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PLL_NMR_RECONFIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PLL_NMR_RECONFIG_COMPONENT_TYPE altera_pll_reconfig
#define HPS_0_PLL_NMR_RECONFIG_COMPONENT_NAME pll_nmr_reconfig
#define HPS_0_PLL_NMR_RECONFIG_BASE 0x300
#define HPS_0_PLL_NMR_RECONFIG_SPAN 256
#define HPS_0_PLL_NMR_RECONFIG_END 0x3ff

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_0_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define HPS_0_SYSID_QSYS_BASE 0x10000
#define HPS_0_SYSID_QSYS_SPAN 8
#define HPS_0_SYSID_QSYS_END 0x10007
#define HPS_0_SYSID_QSYS_ID 2899645186
#define HPS_0_SYSID_QSYS_TIMESTAMP 1521172617

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define HPS_0_JTAG_UART_COMPONENT_NAME jtag_uart
#define HPS_0_JTAG_UART_BASE 0x20000
#define HPS_0_JTAG_UART_SPAN 8
#define HPS_0_JTAG_UART_END 0x20007
#define HPS_0_JTAG_UART_IRQ 2
#define HPS_0_JTAG_UART_READ_DEPTH 64
#define HPS_0_JTAG_UART_READ_THRESHOLD 8
#define HPS_0_JTAG_UART_WRITE_DEPTH 64
#define HPS_0_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_BASE 0x0
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_END 0x7fffffff
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_WRITABLE 1
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'pll_adc_reconfig', class 'altera_pll_reconfig'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PLL_ADC_RECONFIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PLL_ADC_RECONFIG_COMPONENT_TYPE altera_pll_reconfig
#define HPS_0_BRIDGES_PLL_ADC_RECONFIG_COMPONENT_NAME pll_adc_reconfig
#define HPS_0_BRIDGES_PLL_ADC_RECONFIG_BASE 0x0
#define HPS_0_BRIDGES_PLL_ADC_RECONFIG_SPAN 256
#define HPS_0_BRIDGES_PLL_ADC_RECONFIG_END 0xff

/*
 * Macros for device 'alt_vip_vfr_vga', class 'alt_vip_vfr'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_ALT_VIP_VFR_VGA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_ALT_VIP_VFR_VGA_COMPONENT_TYPE alt_vip_vfr
#define HPS_0_BRIDGES_ALT_VIP_VFR_VGA_COMPONENT_NAME alt_vip_vfr_vga
#define HPS_0_BRIDGES_ALT_VIP_VFR_VGA_BASE 0x100
#define HPS_0_BRIDGES_ALT_VIP_VFR_VGA_SPAN 128
#define HPS_0_BRIDGES_ALT_VIP_VFR_VGA_END 0x17f

/*
 * Macros for device 'adc_fifo_mem_out_csr', class 'altera_avalon_fifo'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_CSR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_CSR_COMPONENT_TYPE altera_avalon_fifo
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_CSR_COMPONENT_NAME adc_fifo_mem
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_CSR_BASE 0x200
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_CSR_SPAN 32
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_CSR_END 0x21f
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_CSR_AVALONMM_AVALONMM_DATA_WIDTH 32
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_CSR_AVALONMM_AVALONST_DATA_WIDTH 32
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_CSR_BITS_PER_SYMBOL 16
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_CSR_CHANNEL_WIDTH 0
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_CSR_ERROR_WIDTH 0
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_CSR_FIFO_DEPTH 8192
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_CSR_SINGLE_CLOCK_MODE 0
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_CSR_SYMBOLS_PER_BEAT 2
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_CSR_USE_AVALONMM_READ_SLAVE 1
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_CSR_USE_AVALONMM_WRITE_SLAVE 0
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_CSR_USE_AVALONST_SINK 1
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_CSR_USE_AVALONST_SOURCE 0
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_CSR_USE_BACKPRESSURE 1
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_CSR_USE_IRQ 0
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_CSR_USE_PACKET 0
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_CSR_USE_READ_CONTROL 1
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_CSR_USE_REGISTER 0
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_CSR_USE_WRITE_CONTROL 0

/*
 * Macros for device 'nmr_parameters_samples_per_echo', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NMR_PARAMETERS_SAMPLES_PER_ECHO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NMR_PARAMETERS_SAMPLES_PER_ECHO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NMR_PARAMETERS_SAMPLES_PER_ECHO_COMPONENT_NAME nmr_parameters_samples_per_echo
#define HPS_0_BRIDGES_NMR_PARAMETERS_SAMPLES_PER_ECHO_BASE 0x220
#define HPS_0_BRIDGES_NMR_PARAMETERS_SAMPLES_PER_ECHO_SPAN 16
#define HPS_0_BRIDGES_NMR_PARAMETERS_SAMPLES_PER_ECHO_END 0x22f
#define HPS_0_BRIDGES_NMR_PARAMETERS_SAMPLES_PER_ECHO_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_SAMPLES_PER_ECHO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_SAMPLES_PER_ECHO_CAPTURE 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_SAMPLES_PER_ECHO_DATA_WIDTH 32
#define HPS_0_BRIDGES_NMR_PARAMETERS_SAMPLES_PER_ECHO_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_SAMPLES_PER_ECHO_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_SAMPLES_PER_ECHO_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NMR_PARAMETERS_SAMPLES_PER_ECHO_FREQ 50000000
#define HPS_0_BRIDGES_NMR_PARAMETERS_SAMPLES_PER_ECHO_HAS_IN 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_SAMPLES_PER_ECHO_HAS_OUT 1
#define HPS_0_BRIDGES_NMR_PARAMETERS_SAMPLES_PER_ECHO_HAS_TRI 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_SAMPLES_PER_ECHO_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NMR_PARAMETERS_SAMPLES_PER_ECHO_RESET_VALUE 255

/*
 * Macros for device 'ctrl_in', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_CTRL_IN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_CTRL_IN_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_CTRL_IN_COMPONENT_NAME ctrl_in
#define HPS_0_BRIDGES_CTRL_IN_BASE 0x230
#define HPS_0_BRIDGES_CTRL_IN_SPAN 16
#define HPS_0_BRIDGES_CTRL_IN_END 0x23f
#define HPS_0_BRIDGES_CTRL_IN_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_CTRL_IN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_CTRL_IN_CAPTURE 0
#define HPS_0_BRIDGES_CTRL_IN_DATA_WIDTH 8
#define HPS_0_BRIDGES_CTRL_IN_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_CTRL_IN_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_CTRL_IN_EDGE_TYPE NONE
#define HPS_0_BRIDGES_CTRL_IN_FREQ 50000000
#define HPS_0_BRIDGES_CTRL_IN_HAS_IN 1
#define HPS_0_BRIDGES_CTRL_IN_HAS_OUT 0
#define HPS_0_BRIDGES_CTRL_IN_HAS_TRI 0
#define HPS_0_BRIDGES_CTRL_IN_IRQ_TYPE NONE
#define HPS_0_BRIDGES_CTRL_IN_RESET_VALUE 0

/*
 * Macros for device 'sw', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SW_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_SW_COMPONENT_NAME sw
#define HPS_0_BRIDGES_SW_BASE 0x240
#define HPS_0_BRIDGES_SW_SPAN 16
#define HPS_0_BRIDGES_SW_END 0x24f
#define HPS_0_BRIDGES_SW_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_SW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_SW_CAPTURE 0
#define HPS_0_BRIDGES_SW_DATA_WIDTH 10
#define HPS_0_BRIDGES_SW_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_SW_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_SW_EDGE_TYPE NONE
#define HPS_0_BRIDGES_SW_FREQ 50000000
#define HPS_0_BRIDGES_SW_HAS_IN 1
#define HPS_0_BRIDGES_SW_HAS_OUT 0
#define HPS_0_BRIDGES_SW_HAS_TRI 0
#define HPS_0_BRIDGES_SW_IRQ_TYPE NONE
#define HPS_0_BRIDGES_SW_RESET_VALUE 0

/*
 * Macros for device 'ctrl_out', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_CTRL_OUT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_CTRL_OUT_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_CTRL_OUT_COMPONENT_NAME ctrl_out
#define HPS_0_BRIDGES_CTRL_OUT_BASE 0x250
#define HPS_0_BRIDGES_CTRL_OUT_SPAN 16
#define HPS_0_BRIDGES_CTRL_OUT_END 0x25f
#define HPS_0_BRIDGES_CTRL_OUT_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_CTRL_OUT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_CTRL_OUT_CAPTURE 0
#define HPS_0_BRIDGES_CTRL_OUT_DATA_WIDTH 32
#define HPS_0_BRIDGES_CTRL_OUT_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_CTRL_OUT_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_CTRL_OUT_EDGE_TYPE NONE
#define HPS_0_BRIDGES_CTRL_OUT_FREQ 50000000
#define HPS_0_BRIDGES_CTRL_OUT_HAS_IN 0
#define HPS_0_BRIDGES_CTRL_OUT_HAS_OUT 1
#define HPS_0_BRIDGES_CTRL_OUT_HAS_TRI 0
#define HPS_0_BRIDGES_CTRL_OUT_IRQ_TYPE NONE
#define HPS_0_BRIDGES_CTRL_OUT_RESET_VALUE 119

/*
 * Macros for device 'led', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_LED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_LED_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_LED_COMPONENT_NAME led
#define HPS_0_BRIDGES_LED_BASE 0x260
#define HPS_0_BRIDGES_LED_SPAN 16
#define HPS_0_BRIDGES_LED_END 0x26f
#define HPS_0_BRIDGES_LED_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_LED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_LED_CAPTURE 0
#define HPS_0_BRIDGES_LED_DATA_WIDTH 10
#define HPS_0_BRIDGES_LED_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_LED_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_LED_EDGE_TYPE NONE
#define HPS_0_BRIDGES_LED_FREQ 50000000
#define HPS_0_BRIDGES_LED_HAS_IN 0
#define HPS_0_BRIDGES_LED_HAS_OUT 1
#define HPS_0_BRIDGES_LED_HAS_TRI 0
#define HPS_0_BRIDGES_LED_IRQ_TYPE NONE
#define HPS_0_BRIDGES_LED_RESET_VALUE 1023

/*
 * Macros for device 'nmr_parameters_pulse_90deg', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_90DEG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_90DEG_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_90DEG_COMPONENT_NAME nmr_parameters_pulse_90deg
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_90DEG_BASE 0x270
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_90DEG_SPAN 16
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_90DEG_END 0x27f
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_90DEG_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_90DEG_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_90DEG_CAPTURE 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_90DEG_DATA_WIDTH 32
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_90DEG_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_90DEG_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_90DEG_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_90DEG_FREQ 50000000
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_90DEG_HAS_IN 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_90DEG_HAS_OUT 1
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_90DEG_HAS_TRI 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_90DEG_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_90DEG_RESET_VALUE 16

/*
 * Macros for device 'nmr_parameters_pulse_180deg', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_COMPONENT_NAME nmr_parameters_pulse_180deg
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_BASE 0x280
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_SPAN 16
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_END 0x28f
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_CAPTURE 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_DATA_WIDTH 32
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_FREQ 50000000
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_HAS_IN 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_HAS_OUT 1
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_HAS_TRI 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_RESET_VALUE 16

/*
 * Macros for device 'nmr_parameters_init_delay', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NMR_PARAMETERS_INIT_DELAY_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NMR_PARAMETERS_INIT_DELAY_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NMR_PARAMETERS_INIT_DELAY_COMPONENT_NAME nmr_parameters_init_delay
#define HPS_0_BRIDGES_NMR_PARAMETERS_INIT_DELAY_BASE 0x290
#define HPS_0_BRIDGES_NMR_PARAMETERS_INIT_DELAY_SPAN 16
#define HPS_0_BRIDGES_NMR_PARAMETERS_INIT_DELAY_END 0x29f
#define HPS_0_BRIDGES_NMR_PARAMETERS_INIT_DELAY_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_INIT_DELAY_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_INIT_DELAY_CAPTURE 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_INIT_DELAY_DATA_WIDTH 32
#define HPS_0_BRIDGES_NMR_PARAMETERS_INIT_DELAY_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_INIT_DELAY_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_INIT_DELAY_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NMR_PARAMETERS_INIT_DELAY_FREQ 50000000
#define HPS_0_BRIDGES_NMR_PARAMETERS_INIT_DELAY_HAS_IN 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_INIT_DELAY_HAS_OUT 1
#define HPS_0_BRIDGES_NMR_PARAMETERS_INIT_DELAY_HAS_TRI 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_INIT_DELAY_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NMR_PARAMETERS_INIT_DELAY_RESET_VALUE 0

/*
 * Macros for device 'nmr_parameters_echoes_per_scan', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NMR_PARAMETERS_ECHOES_PER_SCAN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NMR_PARAMETERS_ECHOES_PER_SCAN_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NMR_PARAMETERS_ECHOES_PER_SCAN_COMPONENT_NAME nmr_parameters_echoes_per_scan
#define HPS_0_BRIDGES_NMR_PARAMETERS_ECHOES_PER_SCAN_BASE 0x2a0
#define HPS_0_BRIDGES_NMR_PARAMETERS_ECHOES_PER_SCAN_SPAN 16
#define HPS_0_BRIDGES_NMR_PARAMETERS_ECHOES_PER_SCAN_END 0x2af
#define HPS_0_BRIDGES_NMR_PARAMETERS_ECHOES_PER_SCAN_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_ECHOES_PER_SCAN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_ECHOES_PER_SCAN_CAPTURE 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_ECHOES_PER_SCAN_DATA_WIDTH 32
#define HPS_0_BRIDGES_NMR_PARAMETERS_ECHOES_PER_SCAN_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_ECHOES_PER_SCAN_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_ECHOES_PER_SCAN_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NMR_PARAMETERS_ECHOES_PER_SCAN_FREQ 50000000
#define HPS_0_BRIDGES_NMR_PARAMETERS_ECHOES_PER_SCAN_HAS_IN 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_ECHOES_PER_SCAN_HAS_OUT 1
#define HPS_0_BRIDGES_NMR_PARAMETERS_ECHOES_PER_SCAN_HAS_TRI 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_ECHOES_PER_SCAN_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NMR_PARAMETERS_ECHOES_PER_SCAN_RESET_VALUE 0

/*
 * Macros for device 'nmr_parameters_delay_sig', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_SIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_SIG_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_SIG_COMPONENT_NAME nmr_parameters_delay_sig
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_SIG_BASE 0x2b0
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_SIG_SPAN 16
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_SIG_END 0x2bf
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_SIG_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_SIG_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_SIG_CAPTURE 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_SIG_DATA_WIDTH 32
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_SIG_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_SIG_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_SIG_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_SIG_FREQ 50000000
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_SIG_HAS_IN 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_SIG_HAS_OUT 1
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_SIG_HAS_TRI 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_SIG_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_SIG_RESET_VALUE 16

/*
 * Macros for device 'nmr_parameters_delay_nosig', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_COMPONENT_NAME nmr_parameters_delay_nosig
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_BASE 0x2c0
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_SPAN 16
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_END 0x2cf
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_CAPTURE 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_DATA_WIDTH 32
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_FREQ 50000000
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_HAS_IN 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_HAS_OUT 1
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_HAS_TRI 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_RESET_VALUE 16

/*
 * Macros for device 'adc_fifo_mem_out', class 'altera_avalon_fifo'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_COMPONENT_TYPE altera_avalon_fifo
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_COMPONENT_NAME adc_fifo_mem
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_BASE 0x2d0
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_SPAN 8
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_END 0x2d7
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_AVALONMM_AVALONMM_DATA_WIDTH 32
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_AVALONMM_AVALONST_DATA_WIDTH 32
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_BITS_PER_SYMBOL 16
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_CHANNEL_WIDTH 0
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_ERROR_WIDTH 0
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_FIFO_DEPTH 8192
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_SINGLE_CLOCK_MODE 0
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_SYMBOLS_PER_BEAT 2
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_USE_AVALONMM_READ_SLAVE 1
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_USE_AVALONMM_WRITE_SLAVE 0
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_USE_AVALONST_SINK 1
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_USE_AVALONST_SOURCE 0
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_USE_BACKPRESSURE 1
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_USE_IRQ 0
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_USE_PACKET 0
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_USE_READ_CONTROL 1
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_USE_REGISTER 0
#define HPS_0_BRIDGES_ADC_FIFO_MEM_OUT_USE_WRITE_CONTROL 0

/*
 * Macros for device 'nmr_parameters_delay_nosig_t1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_T1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_T1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_T1_COMPONENT_NAME nmr_parameters_delay_nosig_t1
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_T1_BASE 0x2e0
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_T1_SPAN 16
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_T1_END 0x2ef
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_T1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_T1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_T1_CAPTURE 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_T1_DATA_WIDTH 32
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_T1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_T1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_T1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_T1_FREQ 50000000
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_T1_HAS_IN 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_T1_HAS_OUT 1
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_T1_HAS_TRI 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_T1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NMR_PARAMETERS_DELAY_NOSIG_T1_RESET_VALUE 16

/*
 * Macros for device 'nmr_parameters_pulse_180deg_t1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_T1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_T1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_T1_COMPONENT_NAME nmr_parameters_pulse_180deg_t1
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_T1_BASE 0x2f0
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_T1_SPAN 16
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_T1_END 0x2ff
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_T1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_T1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_T1_CAPTURE 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_T1_DATA_WIDTH 32
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_T1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_T1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_T1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_T1_FREQ 50000000
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_T1_HAS_IN 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_T1_HAS_OUT 1
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_T1_HAS_TRI 0
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_T1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NMR_PARAMETERS_PULSE_180DEG_T1_RESET_VALUE 16

/*
 * Macros for device 'pll_nmr_reconfig', class 'altera_pll_reconfig'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PLL_NMR_RECONFIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PLL_NMR_RECONFIG_COMPONENT_TYPE altera_pll_reconfig
#define HPS_0_BRIDGES_PLL_NMR_RECONFIG_COMPONENT_NAME pll_nmr_reconfig
#define HPS_0_BRIDGES_PLL_NMR_RECONFIG_BASE 0x300
#define HPS_0_BRIDGES_PLL_NMR_RECONFIG_SPAN 256
#define HPS_0_BRIDGES_PLL_NMR_RECONFIG_END 0x3ff

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_0_BRIDGES_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define HPS_0_BRIDGES_SYSID_QSYS_BASE 0x10000
#define HPS_0_BRIDGES_SYSID_QSYS_SPAN 8
#define HPS_0_BRIDGES_SYSID_QSYS_END 0x10007
#define HPS_0_BRIDGES_SYSID_QSYS_ID 2899645186
#define HPS_0_BRIDGES_SYSID_QSYS_TIMESTAMP 1521172617

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define HPS_0_BRIDGES_JTAG_UART_COMPONENT_NAME jtag_uart
#define HPS_0_BRIDGES_JTAG_UART_BASE 0x20000
#define HPS_0_BRIDGES_JTAG_UART_SPAN 8
#define HPS_0_BRIDGES_JTAG_UART_END 0x20007
#define HPS_0_BRIDGES_JTAG_UART_READ_DEPTH 64
#define HPS_0_BRIDGES_JTAG_UART_READ_THRESHOLD 8
#define HPS_0_BRIDGES_JTAG_UART_WRITE_DEPTH 64
#define HPS_0_BRIDGES_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_0_BRIDGES_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_0_BRIDGES_HPS_0_GMAC0_BASE 0xff700000
#define HPS_0_BRIDGES_HPS_0_GMAC0_SPAN 8192
#define HPS_0_BRIDGES_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_0_BRIDGES_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_0_BRIDGES_HPS_0_GMAC1_BASE 0xff702000
#define HPS_0_BRIDGES_HPS_0_GMAC1_SPAN 8192
#define HPS_0_BRIDGES_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_0_BRIDGES_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_0_BRIDGES_HPS_0_SDMMC_BASE 0xff704000
#define HPS_0_BRIDGES_HPS_0_SDMMC_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define HPS_0_BRIDGES_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_0_BRIDGES_HPS_0_QSPI_BASE 0xff705000
#define HPS_0_BRIDGES_HPS_0_QSPI_SPAN 256
#define HPS_0_BRIDGES_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define HPS_0_BRIDGES_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_0_BRIDGES_HPS_0_GPIO0_BASE 0xff708000
#define HPS_0_BRIDGES_HPS_0_GPIO0_SPAN 256
#define HPS_0_BRIDGES_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define HPS_0_BRIDGES_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_0_BRIDGES_HPS_0_GPIO1_BASE 0xff709000
#define HPS_0_BRIDGES_HPS_0_GPIO1_SPAN 256
#define HPS_0_BRIDGES_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define HPS_0_BRIDGES_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_0_BRIDGES_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_0_BRIDGES_HPS_0_GPIO2_SPAN 256
#define HPS_0_BRIDGES_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define HPS_0_BRIDGES_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define HPS_0_BRIDGES_HPS_0_L3REGS_BASE 0xff800000
#define HPS_0_BRIDGES_HPS_0_L3REGS_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_0_BRIDGES_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_0_BRIDGES_HPS_0_NAND0_BASE 0xff900000
#define HPS_0_BRIDGES_HPS_0_NAND0_SPAN 65536
#define HPS_0_BRIDGES_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_0_BRIDGES_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_0_BRIDGES_HPS_0_USB0_BASE 0xffb00000
#define HPS_0_BRIDGES_HPS_0_USB0_SPAN 262144
#define HPS_0_BRIDGES_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_0_BRIDGES_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_0_BRIDGES_HPS_0_USB1_BASE 0xffb40000
#define HPS_0_BRIDGES_HPS_0_USB1_SPAN 262144
#define HPS_0_BRIDGES_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define HPS_0_BRIDGES_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define HPS_0_BRIDGES_HPS_0_DCAN0_BASE 0xffc00000
#define HPS_0_BRIDGES_HPS_0_DCAN0_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define HPS_0_BRIDGES_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define HPS_0_BRIDGES_HPS_0_DCAN1_BASE 0xffc01000
#define HPS_0_BRIDGES_HPS_0_DCAN1_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_0_BRIDGES_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_0_BRIDGES_HPS_0_UART0_BASE 0xffc02000
#define HPS_0_BRIDGES_HPS_0_UART0_SPAN 256
#define HPS_0_BRIDGES_HPS_0_UART0_END 0xffc020ff
#define HPS_0_BRIDGES_HPS_0_UART0_FIFO_DEPTH 128
#define HPS_0_BRIDGES_HPS_0_UART0_FIFO_HWFC 0
#define HPS_0_BRIDGES_HPS_0_UART0_FIFO_MODE 1
#define HPS_0_BRIDGES_HPS_0_UART0_FIFO_SWFC 0
#define HPS_0_BRIDGES_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_0_BRIDGES_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_0_BRIDGES_HPS_0_UART1_BASE 0xffc03000
#define HPS_0_BRIDGES_HPS_0_UART1_SPAN 256
#define HPS_0_BRIDGES_HPS_0_UART1_END 0xffc030ff
#define HPS_0_BRIDGES_HPS_0_UART1_FIFO_DEPTH 128
#define HPS_0_BRIDGES_HPS_0_UART1_FIFO_HWFC 0
#define HPS_0_BRIDGES_HPS_0_UART1_FIFO_MODE 1
#define HPS_0_BRIDGES_HPS_0_UART1_FIFO_SWFC 0
#define HPS_0_BRIDGES_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define HPS_0_BRIDGES_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_0_BRIDGES_HPS_0_I2C0_BASE 0xffc04000
#define HPS_0_BRIDGES_HPS_0_I2C0_SPAN 256
#define HPS_0_BRIDGES_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define HPS_0_BRIDGES_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_0_BRIDGES_HPS_0_I2C1_BASE 0xffc05000
#define HPS_0_BRIDGES_HPS_0_I2C1_SPAN 256
#define HPS_0_BRIDGES_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define HPS_0_BRIDGES_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_0_BRIDGES_HPS_0_I2C2_BASE 0xffc06000
#define HPS_0_BRIDGES_HPS_0_I2C2_SPAN 256
#define HPS_0_BRIDGES_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define HPS_0_BRIDGES_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_0_BRIDGES_HPS_0_I2C3_BASE 0xffc07000
#define HPS_0_BRIDGES_HPS_0_I2C3_SPAN 256
#define HPS_0_BRIDGES_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_BRIDGES_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_0_BRIDGES_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_0_BRIDGES_HPS_0_TIMER0_SPAN 256
#define HPS_0_BRIDGES_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_BRIDGES_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_0_BRIDGES_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_0_BRIDGES_HPS_0_TIMER1_SPAN 256
#define HPS_0_BRIDGES_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define HPS_0_BRIDGES_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define HPS_0_BRIDGES_HPS_0_SDRCTL_BASE 0xffc25000
#define HPS_0_BRIDGES_HPS_0_SDRCTL_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_BRIDGES_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_0_BRIDGES_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_0_BRIDGES_HPS_0_TIMER2_SPAN 256
#define HPS_0_BRIDGES_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_BRIDGES_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_0_BRIDGES_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_0_BRIDGES_HPS_0_TIMER3_SPAN 256
#define HPS_0_BRIDGES_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define HPS_0_BRIDGES_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_0_BRIDGES_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_0_BRIDGES_HPS_0_CLKMGR_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define HPS_0_BRIDGES_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_0_BRIDGES_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_0_BRIDGES_HPS_0_RSTMGR_SPAN 256
#define HPS_0_BRIDGES_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define HPS_0_BRIDGES_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_0_BRIDGES_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_0_BRIDGES_HPS_0_SYSMGR_SPAN 1024
#define HPS_0_BRIDGES_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define HPS_0_BRIDGES_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_0_BRIDGES_HPS_0_DMA_BASE 0xffe01000
#define HPS_0_BRIDGES_HPS_0_DMA_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SPIM0_COMPONENT_TYPE spi
#define HPS_0_BRIDGES_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define HPS_0_BRIDGES_HPS_0_SPIM0_BASE 0xfff00000
#define HPS_0_BRIDGES_HPS_0_SPIM0_SPAN 256
#define HPS_0_BRIDGES_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SPIM1_COMPONENT_TYPE spi
#define HPS_0_BRIDGES_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define HPS_0_BRIDGES_HPS_0_SPIM1_BASE 0xfff01000
#define HPS_0_BRIDGES_HPS_0_SPIM1_SPAN 256
#define HPS_0_BRIDGES_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define HPS_0_BRIDGES_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_0_BRIDGES_HPS_0_TIMER_BASE 0xfffec600
#define HPS_0_BRIDGES_HPS_0_TIMER_SPAN 256
#define HPS_0_BRIDGES_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define HPS_0_BRIDGES_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_0_BRIDGES_HPS_0_L2_BASE 0xfffef000
#define HPS_0_BRIDGES_HPS_0_L2_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_END 0xffffffff
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_WRITABLE 1
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_BASE 0x0
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_END 0x7fffffff
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_WRITABLE 1
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'pll_adc_reconfig', class 'altera_pll_reconfig'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PLL_ADC_RECONFIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PLL_ADC_RECONFIG_COMPONENT_TYPE altera_pll_reconfig
#define HPS_0_ARM_A9_0_PLL_ADC_RECONFIG_COMPONENT_NAME pll_adc_reconfig
#define HPS_0_ARM_A9_0_PLL_ADC_RECONFIG_BASE 0xff200000
#define HPS_0_ARM_A9_0_PLL_ADC_RECONFIG_SPAN 256
#define HPS_0_ARM_A9_0_PLL_ADC_RECONFIG_END 0xff2000ff

/*
 * Macros for device 'alt_vip_vfr_vga', class 'alt_vip_vfr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_ALT_VIP_VFR_VGA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_ALT_VIP_VFR_VGA_COMPONENT_TYPE alt_vip_vfr
#define HPS_0_ARM_A9_0_ALT_VIP_VFR_VGA_COMPONENT_NAME alt_vip_vfr_vga
#define HPS_0_ARM_A9_0_ALT_VIP_VFR_VGA_BASE 0xff200100
#define HPS_0_ARM_A9_0_ALT_VIP_VFR_VGA_SPAN 128
#define HPS_0_ARM_A9_0_ALT_VIP_VFR_VGA_END 0xff20017f

/*
 * Macros for device 'adc_fifo_mem_out_csr', class 'altera_avalon_fifo'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_CSR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_CSR_COMPONENT_TYPE altera_avalon_fifo
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_CSR_COMPONENT_NAME adc_fifo_mem
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_CSR_BASE 0xff200200
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_CSR_SPAN 32
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_CSR_END 0xff20021f
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_CSR_AVALONMM_AVALONMM_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_CSR_AVALONMM_AVALONST_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_CSR_BITS_PER_SYMBOL 16
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_CSR_CHANNEL_WIDTH 0
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_CSR_ERROR_WIDTH 0
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_CSR_FIFO_DEPTH 8192
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_CSR_SINGLE_CLOCK_MODE 0
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_CSR_SYMBOLS_PER_BEAT 2
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_CSR_USE_AVALONMM_READ_SLAVE 1
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_CSR_USE_AVALONMM_WRITE_SLAVE 0
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_CSR_USE_AVALONST_SINK 1
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_CSR_USE_AVALONST_SOURCE 0
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_CSR_USE_BACKPRESSURE 1
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_CSR_USE_IRQ 0
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_CSR_USE_PACKET 0
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_CSR_USE_READ_CONTROL 1
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_CSR_USE_REGISTER 0
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_CSR_USE_WRITE_CONTROL 0

/*
 * Macros for device 'nmr_parameters_samples_per_echo', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_COMPONENT_NAME nmr_parameters_samples_per_echo
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_BASE 0xff200220
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_SPAN 16
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_END 0xff20022f
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_CAPTURE 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_FREQ 50000000
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_HAS_IN 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_HAS_OUT 1
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_HAS_TRI 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_SAMPLES_PER_ECHO_RESET_VALUE 255

/*
 * Macros for device 'ctrl_in', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_CTRL_IN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_CTRL_IN_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_CTRL_IN_COMPONENT_NAME ctrl_in
#define HPS_0_ARM_A9_0_CTRL_IN_BASE 0xff200230
#define HPS_0_ARM_A9_0_CTRL_IN_SPAN 16
#define HPS_0_ARM_A9_0_CTRL_IN_END 0xff20023f
#define HPS_0_ARM_A9_0_CTRL_IN_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_CTRL_IN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_CTRL_IN_CAPTURE 0
#define HPS_0_ARM_A9_0_CTRL_IN_DATA_WIDTH 8
#define HPS_0_ARM_A9_0_CTRL_IN_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_CTRL_IN_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_CTRL_IN_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_CTRL_IN_FREQ 50000000
#define HPS_0_ARM_A9_0_CTRL_IN_HAS_IN 1
#define HPS_0_ARM_A9_0_CTRL_IN_HAS_OUT 0
#define HPS_0_ARM_A9_0_CTRL_IN_HAS_TRI 0
#define HPS_0_ARM_A9_0_CTRL_IN_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_CTRL_IN_RESET_VALUE 0

/*
 * Macros for device 'sw', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SW_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_SW_COMPONENT_NAME sw
#define HPS_0_ARM_A9_0_SW_BASE 0xff200240
#define HPS_0_ARM_A9_0_SW_SPAN 16
#define HPS_0_ARM_A9_0_SW_END 0xff20024f
#define HPS_0_ARM_A9_0_SW_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_SW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_SW_CAPTURE 0
#define HPS_0_ARM_A9_0_SW_DATA_WIDTH 10
#define HPS_0_ARM_A9_0_SW_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_SW_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_SW_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_SW_FREQ 50000000
#define HPS_0_ARM_A9_0_SW_HAS_IN 1
#define HPS_0_ARM_A9_0_SW_HAS_OUT 0
#define HPS_0_ARM_A9_0_SW_HAS_TRI 0
#define HPS_0_ARM_A9_0_SW_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_SW_RESET_VALUE 0

/*
 * Macros for device 'ctrl_out', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_CTRL_OUT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_CTRL_OUT_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_CTRL_OUT_COMPONENT_NAME ctrl_out
#define HPS_0_ARM_A9_0_CTRL_OUT_BASE 0xff200250
#define HPS_0_ARM_A9_0_CTRL_OUT_SPAN 16
#define HPS_0_ARM_A9_0_CTRL_OUT_END 0xff20025f
#define HPS_0_ARM_A9_0_CTRL_OUT_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_CTRL_OUT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_CTRL_OUT_CAPTURE 0
#define HPS_0_ARM_A9_0_CTRL_OUT_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_CTRL_OUT_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_CTRL_OUT_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_CTRL_OUT_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_CTRL_OUT_FREQ 50000000
#define HPS_0_ARM_A9_0_CTRL_OUT_HAS_IN 0
#define HPS_0_ARM_A9_0_CTRL_OUT_HAS_OUT 1
#define HPS_0_ARM_A9_0_CTRL_OUT_HAS_TRI 0
#define HPS_0_ARM_A9_0_CTRL_OUT_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_CTRL_OUT_RESET_VALUE 119

/*
 * Macros for device 'led', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_LED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_LED_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_LED_COMPONENT_NAME led
#define HPS_0_ARM_A9_0_LED_BASE 0xff200260
#define HPS_0_ARM_A9_0_LED_SPAN 16
#define HPS_0_ARM_A9_0_LED_END 0xff20026f
#define HPS_0_ARM_A9_0_LED_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_LED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_LED_CAPTURE 0
#define HPS_0_ARM_A9_0_LED_DATA_WIDTH 10
#define HPS_0_ARM_A9_0_LED_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_LED_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_LED_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_LED_FREQ 50000000
#define HPS_0_ARM_A9_0_LED_HAS_IN 0
#define HPS_0_ARM_A9_0_LED_HAS_OUT 1
#define HPS_0_ARM_A9_0_LED_HAS_TRI 0
#define HPS_0_ARM_A9_0_LED_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_LED_RESET_VALUE 1023

/*
 * Macros for device 'nmr_parameters_pulse_90deg', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_90DEG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_90DEG_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_90DEG_COMPONENT_NAME nmr_parameters_pulse_90deg
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_90DEG_BASE 0xff200270
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_90DEG_SPAN 16
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_90DEG_END 0xff20027f
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_90DEG_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_90DEG_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_90DEG_CAPTURE 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_90DEG_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_90DEG_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_90DEG_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_90DEG_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_90DEG_FREQ 50000000
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_90DEG_HAS_IN 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_90DEG_HAS_OUT 1
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_90DEG_HAS_TRI 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_90DEG_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_90DEG_RESET_VALUE 16

/*
 * Macros for device 'nmr_parameters_pulse_180deg', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_COMPONENT_NAME nmr_parameters_pulse_180deg
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_BASE 0xff200280
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_SPAN 16
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_END 0xff20028f
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_CAPTURE 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_FREQ 50000000
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_HAS_IN 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_HAS_OUT 1
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_HAS_TRI 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_RESET_VALUE 16

/*
 * Macros for device 'nmr_parameters_init_delay', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NMR_PARAMETERS_INIT_DELAY_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_INIT_DELAY_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_INIT_DELAY_COMPONENT_NAME nmr_parameters_init_delay
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_INIT_DELAY_BASE 0xff200290
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_INIT_DELAY_SPAN 16
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_INIT_DELAY_END 0xff20029f
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_INIT_DELAY_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_INIT_DELAY_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_INIT_DELAY_CAPTURE 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_INIT_DELAY_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_INIT_DELAY_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_INIT_DELAY_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_INIT_DELAY_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_INIT_DELAY_FREQ 50000000
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_INIT_DELAY_HAS_IN 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_INIT_DELAY_HAS_OUT 1
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_INIT_DELAY_HAS_TRI 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_INIT_DELAY_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_INIT_DELAY_RESET_VALUE 0

/*
 * Macros for device 'nmr_parameters_echoes_per_scan', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NMR_PARAMETERS_ECHOES_PER_SCAN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_ECHOES_PER_SCAN_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_ECHOES_PER_SCAN_COMPONENT_NAME nmr_parameters_echoes_per_scan
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_ECHOES_PER_SCAN_BASE 0xff2002a0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_ECHOES_PER_SCAN_SPAN 16
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_ECHOES_PER_SCAN_END 0xff2002af
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_ECHOES_PER_SCAN_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_ECHOES_PER_SCAN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_ECHOES_PER_SCAN_CAPTURE 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_ECHOES_PER_SCAN_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_ECHOES_PER_SCAN_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_ECHOES_PER_SCAN_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_ECHOES_PER_SCAN_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_ECHOES_PER_SCAN_FREQ 50000000
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_ECHOES_PER_SCAN_HAS_IN 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_ECHOES_PER_SCAN_HAS_OUT 1
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_ECHOES_PER_SCAN_HAS_TRI 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_ECHOES_PER_SCAN_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_ECHOES_PER_SCAN_RESET_VALUE 0

/*
 * Macros for device 'nmr_parameters_delay_sig', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_SIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_SIG_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_SIG_COMPONENT_NAME nmr_parameters_delay_sig
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_SIG_BASE 0xff2002b0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_SIG_SPAN 16
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_SIG_END 0xff2002bf
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_SIG_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_SIG_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_SIG_CAPTURE 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_SIG_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_SIG_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_SIG_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_SIG_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_SIG_FREQ 50000000
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_SIG_HAS_IN 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_SIG_HAS_OUT 1
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_SIG_HAS_TRI 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_SIG_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_SIG_RESET_VALUE 16

/*
 * Macros for device 'nmr_parameters_delay_nosig', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_COMPONENT_NAME nmr_parameters_delay_nosig
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_BASE 0xff2002c0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_SPAN 16
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_END 0xff2002cf
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_CAPTURE 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_FREQ 50000000
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_HAS_IN 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_HAS_OUT 1
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_HAS_TRI 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_RESET_VALUE 16

/*
 * Macros for device 'adc_fifo_mem_out', class 'altera_avalon_fifo'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_COMPONENT_TYPE altera_avalon_fifo
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_COMPONENT_NAME adc_fifo_mem
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_BASE 0xff2002d0
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_SPAN 8
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_END 0xff2002d7
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_AVALONMM_AVALONMM_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_AVALONMM_AVALONST_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_BITS_PER_SYMBOL 16
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_CHANNEL_WIDTH 0
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_ERROR_WIDTH 0
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_FIFO_DEPTH 8192
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_SINGLE_CLOCK_MODE 0
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_SYMBOLS_PER_BEAT 2
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_USE_AVALONMM_READ_SLAVE 1
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_USE_AVALONMM_WRITE_SLAVE 0
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_USE_AVALONST_SINK 1
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_USE_AVALONST_SOURCE 0
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_USE_BACKPRESSURE 1
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_USE_IRQ 0
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_USE_PACKET 0
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_USE_READ_CONTROL 1
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_USE_REGISTER 0
#define HPS_0_ARM_A9_0_ADC_FIFO_MEM_OUT_USE_WRITE_CONTROL 0

/*
 * Macros for device 'nmr_parameters_delay_nosig_t1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_T1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_T1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_T1_COMPONENT_NAME nmr_parameters_delay_nosig_t1
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_T1_BASE 0xff2002e0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_T1_SPAN 16
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_T1_END 0xff2002ef
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_T1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_T1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_T1_CAPTURE 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_T1_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_T1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_T1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_T1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_T1_FREQ 50000000
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_T1_HAS_IN 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_T1_HAS_OUT 1
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_T1_HAS_TRI 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_T1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_DELAY_NOSIG_T1_RESET_VALUE 16

/*
 * Macros for device 'nmr_parameters_pulse_180deg_t1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_T1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_T1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_T1_COMPONENT_NAME nmr_parameters_pulse_180deg_t1
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_T1_BASE 0xff2002f0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_T1_SPAN 16
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_T1_END 0xff2002ff
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_T1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_T1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_T1_CAPTURE 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_T1_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_T1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_T1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_T1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_T1_FREQ 50000000
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_T1_HAS_IN 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_T1_HAS_OUT 1
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_T1_HAS_TRI 0
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_T1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NMR_PARAMETERS_PULSE_180DEG_T1_RESET_VALUE 16

/*
 * Macros for device 'pll_nmr_reconfig', class 'altera_pll_reconfig'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PLL_NMR_RECONFIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PLL_NMR_RECONFIG_COMPONENT_TYPE altera_pll_reconfig
#define HPS_0_ARM_A9_0_PLL_NMR_RECONFIG_COMPONENT_NAME pll_nmr_reconfig
#define HPS_0_ARM_A9_0_PLL_NMR_RECONFIG_BASE 0xff200300
#define HPS_0_ARM_A9_0_PLL_NMR_RECONFIG_SPAN 256
#define HPS_0_ARM_A9_0_PLL_NMR_RECONFIG_END 0xff2003ff

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_0_ARM_A9_0_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define HPS_0_ARM_A9_0_SYSID_QSYS_BASE 0xff210000
#define HPS_0_ARM_A9_0_SYSID_QSYS_SPAN 8
#define HPS_0_ARM_A9_0_SYSID_QSYS_END 0xff210007
#define HPS_0_ARM_A9_0_SYSID_QSYS_ID 2899645186
#define HPS_0_ARM_A9_0_SYSID_QSYS_TIMESTAMP 1521172617

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define HPS_0_ARM_A9_0_JTAG_UART_COMPONENT_NAME jtag_uart
#define HPS_0_ARM_A9_0_JTAG_UART_BASE 0xff220000
#define HPS_0_ARM_A9_0_JTAG_UART_SPAN 8
#define HPS_0_ARM_A9_0_JTAG_UART_END 0xff220007
#define HPS_0_ARM_A9_0_JTAG_UART_READ_DEPTH 64
#define HPS_0_ARM_A9_0_JTAG_UART_READ_THRESHOLD 8
#define HPS_0_ARM_A9_0_JTAG_UART_WRITE_DEPTH 64
#define HPS_0_ARM_A9_0_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_BASE 0xff700000
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_SPAN 8192
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_BASE 0xff702000
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_SPAN 8192
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_BASE 0xff704000
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define HPS_0_ARM_A9_0_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_0_ARM_A9_0_HPS_0_QSPI_BASE 0xff705000
#define HPS_0_ARM_A9_0_HPS_0_QSPI_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_BASE 0xff708000
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_BASE 0xff709000
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_BASE 0xff800000
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_0_ARM_A9_0_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_0_ARM_A9_0_HPS_0_NAND0_BASE 0xff900000
#define HPS_0_ARM_A9_0_HPS_0_NAND0_SPAN 65536
#define HPS_0_ARM_A9_0_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_0_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_0_ARM_A9_0_HPS_0_USB0_BASE 0xffb00000
#define HPS_0_ARM_A9_0_HPS_0_USB0_SPAN 262144
#define HPS_0_ARM_A9_0_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_0_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_0_ARM_A9_0_HPS_0_USB1_BASE 0xffb40000
#define HPS_0_ARM_A9_0_HPS_0_USB1_SPAN 262144
#define HPS_0_ARM_A9_0_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_BASE 0xffc00000
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_BASE 0xffc01000
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_0_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_0_ARM_A9_0_HPS_0_UART0_BASE 0xffc02000
#define HPS_0_ARM_A9_0_HPS_0_UART0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_UART0_END 0xffc020ff
#define HPS_0_ARM_A9_0_HPS_0_UART0_FIFO_DEPTH 128
#define HPS_0_ARM_A9_0_HPS_0_UART0_FIFO_HWFC 0
#define HPS_0_ARM_A9_0_HPS_0_UART0_FIFO_MODE 1
#define HPS_0_ARM_A9_0_HPS_0_UART0_FIFO_SWFC 0
#define HPS_0_ARM_A9_0_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_0_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_0_ARM_A9_0_HPS_0_UART1_BASE 0xffc03000
#define HPS_0_ARM_A9_0_HPS_0_UART1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_UART1_END 0xffc030ff
#define HPS_0_ARM_A9_0_HPS_0_UART1_FIFO_DEPTH 128
#define HPS_0_ARM_A9_0_HPS_0_UART1_FIFO_HWFC 0
#define HPS_0_ARM_A9_0_HPS_0_UART1_FIFO_MODE 1
#define HPS_0_ARM_A9_0_HPS_0_UART1_FIFO_SWFC 0
#define HPS_0_ARM_A9_0_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_0_ARM_A9_0_HPS_0_I2C0_BASE 0xffc04000
#define HPS_0_ARM_A9_0_HPS_0_I2C0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_0_ARM_A9_0_HPS_0_I2C1_BASE 0xffc05000
#define HPS_0_ARM_A9_0_HPS_0_I2C1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_0_ARM_A9_0_HPS_0_I2C2_BASE 0xffc06000
#define HPS_0_ARM_A9_0_HPS_0_I2C2_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_0_ARM_A9_0_HPS_0_I2C3_BASE 0xffc07000
#define HPS_0_ARM_A9_0_HPS_0_I2C3_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_BASE 0xffc25000
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_wd_timer0', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_COMPONENT_TYPE dw_wd_timer
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_COMPONENT_NAME hps_0_wd_timer0
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_BASE 0xffd02000
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_END 0xffd020ff

/*
 * Macros for device 'hps_0_wd_timer1', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_COMPONENT_TYPE dw_wd_timer
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_COMPONENT_NAME hps_0_wd_timer1
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_BASE 0xffd03000
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_END 0xffd030ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_SPAN 1024
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define HPS_0_ARM_A9_0_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_0_ARM_A9_0_HPS_0_DMA_BASE 0xffe01000
#define HPS_0_ARM_A9_0_HPS_0_DMA_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_BASE 0xfff00000
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_BASE 0xfff01000
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_scu', class 'scu'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SCU_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SCU_COMPONENT_TYPE scu
#define HPS_0_ARM_A9_0_HPS_0_SCU_COMPONENT_NAME hps_0_scu
#define HPS_0_ARM_A9_0_HPS_0_SCU_BASE 0xfffec000
#define HPS_0_ARM_A9_0_HPS_0_SCU_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_SCU_END 0xfffec0ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define HPS_0_ARM_A9_0_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_0_ARM_A9_0_HPS_0_TIMER_BASE 0xfffec600
#define HPS_0_ARM_A9_0_HPS_0_TIMER_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define HPS_0_ARM_A9_0_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_0_ARM_A9_0_HPS_0_L2_BASE 0xfffef000
#define HPS_0_ARM_A9_0_HPS_0_L2_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_END 0xffffffff
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_WRITABLE 1
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_BASE 0x0
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_END 0x7fffffff
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_WRITABLE 1
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'pll_adc_reconfig', class 'altera_pll_reconfig'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PLL_ADC_RECONFIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PLL_ADC_RECONFIG_COMPONENT_TYPE altera_pll_reconfig
#define HPS_0_ARM_A9_1_PLL_ADC_RECONFIG_COMPONENT_NAME pll_adc_reconfig
#define HPS_0_ARM_A9_1_PLL_ADC_RECONFIG_BASE 0xff200000
#define HPS_0_ARM_A9_1_PLL_ADC_RECONFIG_SPAN 256
#define HPS_0_ARM_A9_1_PLL_ADC_RECONFIG_END 0xff2000ff

/*
 * Macros for device 'alt_vip_vfr_vga', class 'alt_vip_vfr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_ALT_VIP_VFR_VGA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_ALT_VIP_VFR_VGA_COMPONENT_TYPE alt_vip_vfr
#define HPS_0_ARM_A9_1_ALT_VIP_VFR_VGA_COMPONENT_NAME alt_vip_vfr_vga
#define HPS_0_ARM_A9_1_ALT_VIP_VFR_VGA_BASE 0xff200100
#define HPS_0_ARM_A9_1_ALT_VIP_VFR_VGA_SPAN 128
#define HPS_0_ARM_A9_1_ALT_VIP_VFR_VGA_END 0xff20017f

/*
 * Macros for device 'adc_fifo_mem_out_csr', class 'altera_avalon_fifo'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_CSR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_CSR_COMPONENT_TYPE altera_avalon_fifo
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_CSR_COMPONENT_NAME adc_fifo_mem
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_CSR_BASE 0xff200200
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_CSR_SPAN 32
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_CSR_END 0xff20021f
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_CSR_AVALONMM_AVALONMM_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_CSR_AVALONMM_AVALONST_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_CSR_BITS_PER_SYMBOL 16
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_CSR_CHANNEL_WIDTH 0
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_CSR_ERROR_WIDTH 0
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_CSR_FIFO_DEPTH 8192
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_CSR_SINGLE_CLOCK_MODE 0
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_CSR_SYMBOLS_PER_BEAT 2
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_CSR_USE_AVALONMM_READ_SLAVE 1
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_CSR_USE_AVALONMM_WRITE_SLAVE 0
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_CSR_USE_AVALONST_SINK 1
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_CSR_USE_AVALONST_SOURCE 0
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_CSR_USE_BACKPRESSURE 1
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_CSR_USE_IRQ 0
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_CSR_USE_PACKET 0
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_CSR_USE_READ_CONTROL 1
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_CSR_USE_REGISTER 0
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_CSR_USE_WRITE_CONTROL 0

/*
 * Macros for device 'nmr_parameters_samples_per_echo', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NMR_PARAMETERS_SAMPLES_PER_ECHO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_SAMPLES_PER_ECHO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_SAMPLES_PER_ECHO_COMPONENT_NAME nmr_parameters_samples_per_echo
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_SAMPLES_PER_ECHO_BASE 0xff200220
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_SAMPLES_PER_ECHO_SPAN 16
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_SAMPLES_PER_ECHO_END 0xff20022f
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_SAMPLES_PER_ECHO_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_SAMPLES_PER_ECHO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_SAMPLES_PER_ECHO_CAPTURE 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_SAMPLES_PER_ECHO_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_SAMPLES_PER_ECHO_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_SAMPLES_PER_ECHO_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_SAMPLES_PER_ECHO_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_SAMPLES_PER_ECHO_FREQ 50000000
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_SAMPLES_PER_ECHO_HAS_IN 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_SAMPLES_PER_ECHO_HAS_OUT 1
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_SAMPLES_PER_ECHO_HAS_TRI 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_SAMPLES_PER_ECHO_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_SAMPLES_PER_ECHO_RESET_VALUE 255

/*
 * Macros for device 'ctrl_in', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_CTRL_IN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_CTRL_IN_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_CTRL_IN_COMPONENT_NAME ctrl_in
#define HPS_0_ARM_A9_1_CTRL_IN_BASE 0xff200230
#define HPS_0_ARM_A9_1_CTRL_IN_SPAN 16
#define HPS_0_ARM_A9_1_CTRL_IN_END 0xff20023f
#define HPS_0_ARM_A9_1_CTRL_IN_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_CTRL_IN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_CTRL_IN_CAPTURE 0
#define HPS_0_ARM_A9_1_CTRL_IN_DATA_WIDTH 8
#define HPS_0_ARM_A9_1_CTRL_IN_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_CTRL_IN_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_CTRL_IN_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_CTRL_IN_FREQ 50000000
#define HPS_0_ARM_A9_1_CTRL_IN_HAS_IN 1
#define HPS_0_ARM_A9_1_CTRL_IN_HAS_OUT 0
#define HPS_0_ARM_A9_1_CTRL_IN_HAS_TRI 0
#define HPS_0_ARM_A9_1_CTRL_IN_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_CTRL_IN_RESET_VALUE 0

/*
 * Macros for device 'sw', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SW_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_SW_COMPONENT_NAME sw
#define HPS_0_ARM_A9_1_SW_BASE 0xff200240
#define HPS_0_ARM_A9_1_SW_SPAN 16
#define HPS_0_ARM_A9_1_SW_END 0xff20024f
#define HPS_0_ARM_A9_1_SW_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_SW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_SW_CAPTURE 0
#define HPS_0_ARM_A9_1_SW_DATA_WIDTH 10
#define HPS_0_ARM_A9_1_SW_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_SW_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_SW_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_SW_FREQ 50000000
#define HPS_0_ARM_A9_1_SW_HAS_IN 1
#define HPS_0_ARM_A9_1_SW_HAS_OUT 0
#define HPS_0_ARM_A9_1_SW_HAS_TRI 0
#define HPS_0_ARM_A9_1_SW_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_SW_RESET_VALUE 0

/*
 * Macros for device 'ctrl_out', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_CTRL_OUT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_CTRL_OUT_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_CTRL_OUT_COMPONENT_NAME ctrl_out
#define HPS_0_ARM_A9_1_CTRL_OUT_BASE 0xff200250
#define HPS_0_ARM_A9_1_CTRL_OUT_SPAN 16
#define HPS_0_ARM_A9_1_CTRL_OUT_END 0xff20025f
#define HPS_0_ARM_A9_1_CTRL_OUT_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_CTRL_OUT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_CTRL_OUT_CAPTURE 0
#define HPS_0_ARM_A9_1_CTRL_OUT_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_CTRL_OUT_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_CTRL_OUT_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_CTRL_OUT_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_CTRL_OUT_FREQ 50000000
#define HPS_0_ARM_A9_1_CTRL_OUT_HAS_IN 0
#define HPS_0_ARM_A9_1_CTRL_OUT_HAS_OUT 1
#define HPS_0_ARM_A9_1_CTRL_OUT_HAS_TRI 0
#define HPS_0_ARM_A9_1_CTRL_OUT_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_CTRL_OUT_RESET_VALUE 119

/*
 * Macros for device 'led', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_LED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_LED_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_LED_COMPONENT_NAME led
#define HPS_0_ARM_A9_1_LED_BASE 0xff200260
#define HPS_0_ARM_A9_1_LED_SPAN 16
#define HPS_0_ARM_A9_1_LED_END 0xff20026f
#define HPS_0_ARM_A9_1_LED_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_LED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_LED_CAPTURE 0
#define HPS_0_ARM_A9_1_LED_DATA_WIDTH 10
#define HPS_0_ARM_A9_1_LED_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_LED_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_LED_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_LED_FREQ 50000000
#define HPS_0_ARM_A9_1_LED_HAS_IN 0
#define HPS_0_ARM_A9_1_LED_HAS_OUT 1
#define HPS_0_ARM_A9_1_LED_HAS_TRI 0
#define HPS_0_ARM_A9_1_LED_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_LED_RESET_VALUE 1023

/*
 * Macros for device 'nmr_parameters_pulse_90deg', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_90DEG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_90DEG_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_90DEG_COMPONENT_NAME nmr_parameters_pulse_90deg
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_90DEG_BASE 0xff200270
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_90DEG_SPAN 16
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_90DEG_END 0xff20027f
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_90DEG_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_90DEG_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_90DEG_CAPTURE 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_90DEG_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_90DEG_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_90DEG_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_90DEG_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_90DEG_FREQ 50000000
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_90DEG_HAS_IN 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_90DEG_HAS_OUT 1
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_90DEG_HAS_TRI 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_90DEG_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_90DEG_RESET_VALUE 16

/*
 * Macros for device 'nmr_parameters_pulse_180deg', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_COMPONENT_NAME nmr_parameters_pulse_180deg
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_BASE 0xff200280
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_SPAN 16
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_END 0xff20028f
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_CAPTURE 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_FREQ 50000000
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_HAS_IN 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_HAS_OUT 1
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_HAS_TRI 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_RESET_VALUE 16

/*
 * Macros for device 'nmr_parameters_init_delay', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NMR_PARAMETERS_INIT_DELAY_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_INIT_DELAY_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_INIT_DELAY_COMPONENT_NAME nmr_parameters_init_delay
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_INIT_DELAY_BASE 0xff200290
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_INIT_DELAY_SPAN 16
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_INIT_DELAY_END 0xff20029f
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_INIT_DELAY_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_INIT_DELAY_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_INIT_DELAY_CAPTURE 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_INIT_DELAY_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_INIT_DELAY_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_INIT_DELAY_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_INIT_DELAY_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_INIT_DELAY_FREQ 50000000
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_INIT_DELAY_HAS_IN 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_INIT_DELAY_HAS_OUT 1
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_INIT_DELAY_HAS_TRI 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_INIT_DELAY_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_INIT_DELAY_RESET_VALUE 0

/*
 * Macros for device 'nmr_parameters_echoes_per_scan', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NMR_PARAMETERS_ECHOES_PER_SCAN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_ECHOES_PER_SCAN_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_ECHOES_PER_SCAN_COMPONENT_NAME nmr_parameters_echoes_per_scan
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_ECHOES_PER_SCAN_BASE 0xff2002a0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_ECHOES_PER_SCAN_SPAN 16
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_ECHOES_PER_SCAN_END 0xff2002af
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_ECHOES_PER_SCAN_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_ECHOES_PER_SCAN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_ECHOES_PER_SCAN_CAPTURE 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_ECHOES_PER_SCAN_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_ECHOES_PER_SCAN_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_ECHOES_PER_SCAN_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_ECHOES_PER_SCAN_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_ECHOES_PER_SCAN_FREQ 50000000
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_ECHOES_PER_SCAN_HAS_IN 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_ECHOES_PER_SCAN_HAS_OUT 1
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_ECHOES_PER_SCAN_HAS_TRI 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_ECHOES_PER_SCAN_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_ECHOES_PER_SCAN_RESET_VALUE 0

/*
 * Macros for device 'nmr_parameters_delay_sig', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_SIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_SIG_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_SIG_COMPONENT_NAME nmr_parameters_delay_sig
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_SIG_BASE 0xff2002b0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_SIG_SPAN 16
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_SIG_END 0xff2002bf
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_SIG_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_SIG_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_SIG_CAPTURE 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_SIG_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_SIG_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_SIG_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_SIG_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_SIG_FREQ 50000000
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_SIG_HAS_IN 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_SIG_HAS_OUT 1
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_SIG_HAS_TRI 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_SIG_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_SIG_RESET_VALUE 16

/*
 * Macros for device 'nmr_parameters_delay_nosig', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_COMPONENT_NAME nmr_parameters_delay_nosig
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_BASE 0xff2002c0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_SPAN 16
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_END 0xff2002cf
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_CAPTURE 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_FREQ 50000000
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_HAS_IN 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_HAS_OUT 1
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_HAS_TRI 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_RESET_VALUE 16

/*
 * Macros for device 'adc_fifo_mem_out', class 'altera_avalon_fifo'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_COMPONENT_TYPE altera_avalon_fifo
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_COMPONENT_NAME adc_fifo_mem
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_BASE 0xff2002d0
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_SPAN 8
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_END 0xff2002d7
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_AVALONMM_AVALONMM_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_AVALONMM_AVALONST_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_BITS_PER_SYMBOL 16
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_CHANNEL_WIDTH 0
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_ERROR_WIDTH 0
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_FIFO_DEPTH 8192
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_SINGLE_CLOCK_MODE 0
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_SYMBOLS_PER_BEAT 2
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_USE_AVALONMM_READ_SLAVE 1
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_USE_AVALONMM_WRITE_SLAVE 0
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_USE_AVALONST_SINK 1
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_USE_AVALONST_SOURCE 0
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_USE_BACKPRESSURE 1
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_USE_IRQ 0
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_USE_PACKET 0
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_USE_READ_CONTROL 1
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_USE_REGISTER 0
#define HPS_0_ARM_A9_1_ADC_FIFO_MEM_OUT_USE_WRITE_CONTROL 0

/*
 * Macros for device 'nmr_parameters_delay_nosig_t1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_T1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_T1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_T1_COMPONENT_NAME nmr_parameters_delay_nosig_t1
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_T1_BASE 0xff2002e0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_T1_SPAN 16
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_T1_END 0xff2002ef
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_T1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_T1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_T1_CAPTURE 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_T1_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_T1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_T1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_T1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_T1_FREQ 50000000
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_T1_HAS_IN 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_T1_HAS_OUT 1
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_T1_HAS_TRI 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_T1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_DELAY_NOSIG_T1_RESET_VALUE 16

/*
 * Macros for device 'nmr_parameters_pulse_180deg_t1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_T1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_T1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_T1_COMPONENT_NAME nmr_parameters_pulse_180deg_t1
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_T1_BASE 0xff2002f0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_T1_SPAN 16
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_T1_END 0xff2002ff
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_T1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_T1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_T1_CAPTURE 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_T1_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_T1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_T1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_T1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_T1_FREQ 50000000
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_T1_HAS_IN 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_T1_HAS_OUT 1
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_T1_HAS_TRI 0
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_T1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NMR_PARAMETERS_PULSE_180DEG_T1_RESET_VALUE 16

/*
 * Macros for device 'pll_nmr_reconfig', class 'altera_pll_reconfig'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PLL_NMR_RECONFIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PLL_NMR_RECONFIG_COMPONENT_TYPE altera_pll_reconfig
#define HPS_0_ARM_A9_1_PLL_NMR_RECONFIG_COMPONENT_NAME pll_nmr_reconfig
#define HPS_0_ARM_A9_1_PLL_NMR_RECONFIG_BASE 0xff200300
#define HPS_0_ARM_A9_1_PLL_NMR_RECONFIG_SPAN 256
#define HPS_0_ARM_A9_1_PLL_NMR_RECONFIG_END 0xff2003ff

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_0_ARM_A9_1_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define HPS_0_ARM_A9_1_SYSID_QSYS_BASE 0xff210000
#define HPS_0_ARM_A9_1_SYSID_QSYS_SPAN 8
#define HPS_0_ARM_A9_1_SYSID_QSYS_END 0xff210007
#define HPS_0_ARM_A9_1_SYSID_QSYS_ID 2899645186
#define HPS_0_ARM_A9_1_SYSID_QSYS_TIMESTAMP 1521172617

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define HPS_0_ARM_A9_1_JTAG_UART_COMPONENT_NAME jtag_uart
#define HPS_0_ARM_A9_1_JTAG_UART_BASE 0xff220000
#define HPS_0_ARM_A9_1_JTAG_UART_SPAN 8
#define HPS_0_ARM_A9_1_JTAG_UART_END 0xff220007
#define HPS_0_ARM_A9_1_JTAG_UART_READ_DEPTH 64
#define HPS_0_ARM_A9_1_JTAG_UART_READ_THRESHOLD 8
#define HPS_0_ARM_A9_1_JTAG_UART_WRITE_DEPTH 64
#define HPS_0_ARM_A9_1_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_BASE 0xff700000
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_SPAN 8192
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_BASE 0xff702000
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_SPAN 8192
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_BASE 0xff704000
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define HPS_0_ARM_A9_1_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_0_ARM_A9_1_HPS_0_QSPI_BASE 0xff705000
#define HPS_0_ARM_A9_1_HPS_0_QSPI_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_BASE 0xff708000
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_BASE 0xff709000
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_BASE 0xff800000
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_0_ARM_A9_1_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_0_ARM_A9_1_HPS_0_NAND0_BASE 0xff900000
#define HPS_0_ARM_A9_1_HPS_0_NAND0_SPAN 65536
#define HPS_0_ARM_A9_1_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_1_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_0_ARM_A9_1_HPS_0_USB0_BASE 0xffb00000
#define HPS_0_ARM_A9_1_HPS_0_USB0_SPAN 262144
#define HPS_0_ARM_A9_1_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_1_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_0_ARM_A9_1_HPS_0_USB1_BASE 0xffb40000
#define HPS_0_ARM_A9_1_HPS_0_USB1_SPAN 262144
#define HPS_0_ARM_A9_1_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_BASE 0xffc00000
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_BASE 0xffc01000
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_1_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_0_ARM_A9_1_HPS_0_UART0_BASE 0xffc02000
#define HPS_0_ARM_A9_1_HPS_0_UART0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_UART0_END 0xffc020ff
#define HPS_0_ARM_A9_1_HPS_0_UART0_FIFO_DEPTH 128
#define HPS_0_ARM_A9_1_HPS_0_UART0_FIFO_HWFC 0
#define HPS_0_ARM_A9_1_HPS_0_UART0_FIFO_MODE 1
#define HPS_0_ARM_A9_1_HPS_0_UART0_FIFO_SWFC 0
#define HPS_0_ARM_A9_1_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_1_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_0_ARM_A9_1_HPS_0_UART1_BASE 0xffc03000
#define HPS_0_ARM_A9_1_HPS_0_UART1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_UART1_END 0xffc030ff
#define HPS_0_ARM_A9_1_HPS_0_UART1_FIFO_DEPTH 128
#define HPS_0_ARM_A9_1_HPS_0_UART1_FIFO_HWFC 0
#define HPS_0_ARM_A9_1_HPS_0_UART1_FIFO_MODE 1
#define HPS_0_ARM_A9_1_HPS_0_UART1_FIFO_SWFC 0
#define HPS_0_ARM_A9_1_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_0_ARM_A9_1_HPS_0_I2C0_BASE 0xffc04000
#define HPS_0_ARM_A9_1_HPS_0_I2C0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_0_ARM_A9_1_HPS_0_I2C1_BASE 0xffc05000
#define HPS_0_ARM_A9_1_HPS_0_I2C1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_0_ARM_A9_1_HPS_0_I2C2_BASE 0xffc06000
#define HPS_0_ARM_A9_1_HPS_0_I2C2_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_0_ARM_A9_1_HPS_0_I2C3_BASE 0xffc07000
#define HPS_0_ARM_A9_1_HPS_0_I2C3_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_BASE 0xffc25000
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_wd_timer0', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_COMPONENT_TYPE dw_wd_timer
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_COMPONENT_NAME hps_0_wd_timer0
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_BASE 0xffd02000
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_END 0xffd020ff

/*
 * Macros for device 'hps_0_wd_timer1', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_COMPONENT_TYPE dw_wd_timer
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_COMPONENT_NAME hps_0_wd_timer1
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_BASE 0xffd03000
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_END 0xffd030ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_SPAN 1024
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define HPS_0_ARM_A9_1_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_0_ARM_A9_1_HPS_0_DMA_BASE 0xffe01000
#define HPS_0_ARM_A9_1_HPS_0_DMA_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_BASE 0xfff00000
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_BASE 0xfff01000
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_scu', class 'scu'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SCU_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SCU_COMPONENT_TYPE scu
#define HPS_0_ARM_A9_1_HPS_0_SCU_COMPONENT_NAME hps_0_scu
#define HPS_0_ARM_A9_1_HPS_0_SCU_BASE 0xfffec000
#define HPS_0_ARM_A9_1_HPS_0_SCU_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_SCU_END 0xfffec0ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define HPS_0_ARM_A9_1_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_0_ARM_A9_1_HPS_0_TIMER_BASE 0xfffec600
#define HPS_0_ARM_A9_1_HPS_0_TIMER_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define HPS_0_ARM_A9_1_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_0_ARM_A9_1_HPS_0_L2_BASE 0xfffef000
#define HPS_0_ARM_A9_1_HPS_0_L2_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_END 0xffffffff
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_WRITABLE 1
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'adc_fifo_sc', class 'altera_avalon_sc_fifo'
 * Path to the device is from the master group 'master_fifo_sc'.
 * The macros are prefixed with 'MASTER_FIFO_SC_ADC_FIFO_SC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_FIFO_SC_ADC_FIFO_SC_COMPONENT_TYPE altera_avalon_sc_fifo
#define MASTER_FIFO_SC_ADC_FIFO_SC_COMPONENT_NAME adc_fifo_sc
#define MASTER_FIFO_SC_ADC_FIFO_SC_BASE 0x0
#define MASTER_FIFO_SC_ADC_FIFO_SC_SPAN 16
#define MASTER_FIFO_SC_ADC_FIFO_SC_END 0xf

/*
 * Macros for device 'pll_adc_reconfig', class 'altera_pll_reconfig'
 * Path to the device is from the master group 'master_non_sec'.
 * The macros are prefixed with 'MASTER_NON_SEC_PLL_ADC_RECONFIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_NON_SEC_PLL_ADC_RECONFIG_COMPONENT_TYPE altera_pll_reconfig
#define MASTER_NON_SEC_PLL_ADC_RECONFIG_COMPONENT_NAME pll_adc_reconfig
#define MASTER_NON_SEC_PLL_ADC_RECONFIG_BASE 0x0
#define MASTER_NON_SEC_PLL_ADC_RECONFIG_SPAN 256
#define MASTER_NON_SEC_PLL_ADC_RECONFIG_END 0xff

/*
 * Macros for device 'adc_fifo_mem_out_csr', class 'altera_avalon_fifo'
 * Path to the device is from the master group 'master_non_sec'.
 * The macros are prefixed with 'MASTER_NON_SEC_ADC_FIFO_MEM_OUT_CSR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_CSR_COMPONENT_TYPE altera_avalon_fifo
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_CSR_COMPONENT_NAME adc_fifo_mem
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_CSR_BASE 0x200
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_CSR_SPAN 32
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_CSR_END 0x21f
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_CSR_AVALONMM_AVALONMM_DATA_WIDTH 32
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_CSR_AVALONMM_AVALONST_DATA_WIDTH 32
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_CSR_BITS_PER_SYMBOL 16
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_CSR_CHANNEL_WIDTH 0
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_CSR_ERROR_WIDTH 0
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_CSR_FIFO_DEPTH 8192
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_CSR_SINGLE_CLOCK_MODE 0
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_CSR_SYMBOLS_PER_BEAT 2
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_CSR_USE_AVALONMM_READ_SLAVE 1
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_CSR_USE_AVALONMM_WRITE_SLAVE 0
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_CSR_USE_AVALONST_SINK 1
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_CSR_USE_AVALONST_SOURCE 0
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_CSR_USE_BACKPRESSURE 1
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_CSR_USE_IRQ 0
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_CSR_USE_PACKET 0
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_CSR_USE_READ_CONTROL 1
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_CSR_USE_REGISTER 0
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_CSR_USE_WRITE_CONTROL 0

/*
 * Macros for device 'nmr_parameters_samples_per_echo', class 'altera_avalon_pio'
 * Path to the device is from the master group 'master_non_sec'.
 * The macros are prefixed with 'MASTER_NON_SEC_NMR_PARAMETERS_SAMPLES_PER_ECHO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_NON_SEC_NMR_PARAMETERS_SAMPLES_PER_ECHO_COMPONENT_TYPE altera_avalon_pio
#define MASTER_NON_SEC_NMR_PARAMETERS_SAMPLES_PER_ECHO_COMPONENT_NAME nmr_parameters_samples_per_echo
#define MASTER_NON_SEC_NMR_PARAMETERS_SAMPLES_PER_ECHO_BASE 0x220
#define MASTER_NON_SEC_NMR_PARAMETERS_SAMPLES_PER_ECHO_SPAN 16
#define MASTER_NON_SEC_NMR_PARAMETERS_SAMPLES_PER_ECHO_END 0x22f
#define MASTER_NON_SEC_NMR_PARAMETERS_SAMPLES_PER_ECHO_BIT_CLEARING_EDGE_REGISTER 0
#define MASTER_NON_SEC_NMR_PARAMETERS_SAMPLES_PER_ECHO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MASTER_NON_SEC_NMR_PARAMETERS_SAMPLES_PER_ECHO_CAPTURE 0
#define MASTER_NON_SEC_NMR_PARAMETERS_SAMPLES_PER_ECHO_DATA_WIDTH 32
#define MASTER_NON_SEC_NMR_PARAMETERS_SAMPLES_PER_ECHO_DO_TEST_BENCH_WIRING 0
#define MASTER_NON_SEC_NMR_PARAMETERS_SAMPLES_PER_ECHO_DRIVEN_SIM_VALUE 0
#define MASTER_NON_SEC_NMR_PARAMETERS_SAMPLES_PER_ECHO_EDGE_TYPE NONE
#define MASTER_NON_SEC_NMR_PARAMETERS_SAMPLES_PER_ECHO_FREQ 50000000
#define MASTER_NON_SEC_NMR_PARAMETERS_SAMPLES_PER_ECHO_HAS_IN 0
#define MASTER_NON_SEC_NMR_PARAMETERS_SAMPLES_PER_ECHO_HAS_OUT 1
#define MASTER_NON_SEC_NMR_PARAMETERS_SAMPLES_PER_ECHO_HAS_TRI 0
#define MASTER_NON_SEC_NMR_PARAMETERS_SAMPLES_PER_ECHO_IRQ_TYPE NONE
#define MASTER_NON_SEC_NMR_PARAMETERS_SAMPLES_PER_ECHO_RESET_VALUE 255

/*
 * Macros for device 'ctrl_in', class 'altera_avalon_pio'
 * Path to the device is from the master group 'master_non_sec'.
 * The macros are prefixed with 'MASTER_NON_SEC_CTRL_IN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_NON_SEC_CTRL_IN_COMPONENT_TYPE altera_avalon_pio
#define MASTER_NON_SEC_CTRL_IN_COMPONENT_NAME ctrl_in
#define MASTER_NON_SEC_CTRL_IN_BASE 0x230
#define MASTER_NON_SEC_CTRL_IN_SPAN 16
#define MASTER_NON_SEC_CTRL_IN_END 0x23f
#define MASTER_NON_SEC_CTRL_IN_BIT_CLEARING_EDGE_REGISTER 0
#define MASTER_NON_SEC_CTRL_IN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MASTER_NON_SEC_CTRL_IN_CAPTURE 0
#define MASTER_NON_SEC_CTRL_IN_DATA_WIDTH 8
#define MASTER_NON_SEC_CTRL_IN_DO_TEST_BENCH_WIRING 0
#define MASTER_NON_SEC_CTRL_IN_DRIVEN_SIM_VALUE 0
#define MASTER_NON_SEC_CTRL_IN_EDGE_TYPE NONE
#define MASTER_NON_SEC_CTRL_IN_FREQ 50000000
#define MASTER_NON_SEC_CTRL_IN_HAS_IN 1
#define MASTER_NON_SEC_CTRL_IN_HAS_OUT 0
#define MASTER_NON_SEC_CTRL_IN_HAS_TRI 0
#define MASTER_NON_SEC_CTRL_IN_IRQ_TYPE NONE
#define MASTER_NON_SEC_CTRL_IN_RESET_VALUE 0

/*
 * Macros for device 'sw', class 'altera_avalon_pio'
 * Path to the device is from the master group 'master_non_sec'.
 * The macros are prefixed with 'MASTER_NON_SEC_SW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_NON_SEC_SW_COMPONENT_TYPE altera_avalon_pio
#define MASTER_NON_SEC_SW_COMPONENT_NAME sw
#define MASTER_NON_SEC_SW_BASE 0x240
#define MASTER_NON_SEC_SW_SPAN 16
#define MASTER_NON_SEC_SW_END 0x24f
#define MASTER_NON_SEC_SW_BIT_CLEARING_EDGE_REGISTER 0
#define MASTER_NON_SEC_SW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MASTER_NON_SEC_SW_CAPTURE 0
#define MASTER_NON_SEC_SW_DATA_WIDTH 10
#define MASTER_NON_SEC_SW_DO_TEST_BENCH_WIRING 0
#define MASTER_NON_SEC_SW_DRIVEN_SIM_VALUE 0
#define MASTER_NON_SEC_SW_EDGE_TYPE NONE
#define MASTER_NON_SEC_SW_FREQ 50000000
#define MASTER_NON_SEC_SW_HAS_IN 1
#define MASTER_NON_SEC_SW_HAS_OUT 0
#define MASTER_NON_SEC_SW_HAS_TRI 0
#define MASTER_NON_SEC_SW_IRQ_TYPE NONE
#define MASTER_NON_SEC_SW_RESET_VALUE 0

/*
 * Macros for device 'ctrl_out', class 'altera_avalon_pio'
 * Path to the device is from the master group 'master_non_sec'.
 * The macros are prefixed with 'MASTER_NON_SEC_CTRL_OUT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_NON_SEC_CTRL_OUT_COMPONENT_TYPE altera_avalon_pio
#define MASTER_NON_SEC_CTRL_OUT_COMPONENT_NAME ctrl_out
#define MASTER_NON_SEC_CTRL_OUT_BASE 0x250
#define MASTER_NON_SEC_CTRL_OUT_SPAN 16
#define MASTER_NON_SEC_CTRL_OUT_END 0x25f
#define MASTER_NON_SEC_CTRL_OUT_BIT_CLEARING_EDGE_REGISTER 0
#define MASTER_NON_SEC_CTRL_OUT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MASTER_NON_SEC_CTRL_OUT_CAPTURE 0
#define MASTER_NON_SEC_CTRL_OUT_DATA_WIDTH 32
#define MASTER_NON_SEC_CTRL_OUT_DO_TEST_BENCH_WIRING 0
#define MASTER_NON_SEC_CTRL_OUT_DRIVEN_SIM_VALUE 0
#define MASTER_NON_SEC_CTRL_OUT_EDGE_TYPE NONE
#define MASTER_NON_SEC_CTRL_OUT_FREQ 50000000
#define MASTER_NON_SEC_CTRL_OUT_HAS_IN 0
#define MASTER_NON_SEC_CTRL_OUT_HAS_OUT 1
#define MASTER_NON_SEC_CTRL_OUT_HAS_TRI 0
#define MASTER_NON_SEC_CTRL_OUT_IRQ_TYPE NONE
#define MASTER_NON_SEC_CTRL_OUT_RESET_VALUE 119

/*
 * Macros for device 'led', class 'altera_avalon_pio'
 * Path to the device is from the master group 'master_non_sec'.
 * The macros are prefixed with 'MASTER_NON_SEC_LED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_NON_SEC_LED_COMPONENT_TYPE altera_avalon_pio
#define MASTER_NON_SEC_LED_COMPONENT_NAME led
#define MASTER_NON_SEC_LED_BASE 0x260
#define MASTER_NON_SEC_LED_SPAN 16
#define MASTER_NON_SEC_LED_END 0x26f
#define MASTER_NON_SEC_LED_BIT_CLEARING_EDGE_REGISTER 0
#define MASTER_NON_SEC_LED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MASTER_NON_SEC_LED_CAPTURE 0
#define MASTER_NON_SEC_LED_DATA_WIDTH 10
#define MASTER_NON_SEC_LED_DO_TEST_BENCH_WIRING 0
#define MASTER_NON_SEC_LED_DRIVEN_SIM_VALUE 0
#define MASTER_NON_SEC_LED_EDGE_TYPE NONE
#define MASTER_NON_SEC_LED_FREQ 50000000
#define MASTER_NON_SEC_LED_HAS_IN 0
#define MASTER_NON_SEC_LED_HAS_OUT 1
#define MASTER_NON_SEC_LED_HAS_TRI 0
#define MASTER_NON_SEC_LED_IRQ_TYPE NONE
#define MASTER_NON_SEC_LED_RESET_VALUE 1023

/*
 * Macros for device 'nmr_parameters_pulse_90deg', class 'altera_avalon_pio'
 * Path to the device is from the master group 'master_non_sec'.
 * The macros are prefixed with 'MASTER_NON_SEC_NMR_PARAMETERS_PULSE_90DEG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_90DEG_COMPONENT_TYPE altera_avalon_pio
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_90DEG_COMPONENT_NAME nmr_parameters_pulse_90deg
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_90DEG_BASE 0x270
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_90DEG_SPAN 16
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_90DEG_END 0x27f
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_90DEG_BIT_CLEARING_EDGE_REGISTER 0
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_90DEG_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_90DEG_CAPTURE 0
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_90DEG_DATA_WIDTH 32
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_90DEG_DO_TEST_BENCH_WIRING 0
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_90DEG_DRIVEN_SIM_VALUE 0
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_90DEG_EDGE_TYPE NONE
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_90DEG_FREQ 50000000
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_90DEG_HAS_IN 0
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_90DEG_HAS_OUT 1
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_90DEG_HAS_TRI 0
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_90DEG_IRQ_TYPE NONE
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_90DEG_RESET_VALUE 16

/*
 * Macros for device 'nmr_parameters_pulse_180deg', class 'altera_avalon_pio'
 * Path to the device is from the master group 'master_non_sec'.
 * The macros are prefixed with 'MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_COMPONENT_TYPE altera_avalon_pio
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_COMPONENT_NAME nmr_parameters_pulse_180deg
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_BASE 0x280
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_SPAN 16
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_END 0x28f
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_BIT_CLEARING_EDGE_REGISTER 0
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_CAPTURE 0
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_DATA_WIDTH 32
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_DO_TEST_BENCH_WIRING 0
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_DRIVEN_SIM_VALUE 0
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_EDGE_TYPE NONE
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_FREQ 50000000
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_HAS_IN 0
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_HAS_OUT 1
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_HAS_TRI 0
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_IRQ_TYPE NONE
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_RESET_VALUE 16

/*
 * Macros for device 'nmr_parameters_init_delay', class 'altera_avalon_pio'
 * Path to the device is from the master group 'master_non_sec'.
 * The macros are prefixed with 'MASTER_NON_SEC_NMR_PARAMETERS_INIT_DELAY_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_NON_SEC_NMR_PARAMETERS_INIT_DELAY_COMPONENT_TYPE altera_avalon_pio
#define MASTER_NON_SEC_NMR_PARAMETERS_INIT_DELAY_COMPONENT_NAME nmr_parameters_init_delay
#define MASTER_NON_SEC_NMR_PARAMETERS_INIT_DELAY_BASE 0x290
#define MASTER_NON_SEC_NMR_PARAMETERS_INIT_DELAY_SPAN 16
#define MASTER_NON_SEC_NMR_PARAMETERS_INIT_DELAY_END 0x29f
#define MASTER_NON_SEC_NMR_PARAMETERS_INIT_DELAY_BIT_CLEARING_EDGE_REGISTER 0
#define MASTER_NON_SEC_NMR_PARAMETERS_INIT_DELAY_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MASTER_NON_SEC_NMR_PARAMETERS_INIT_DELAY_CAPTURE 0
#define MASTER_NON_SEC_NMR_PARAMETERS_INIT_DELAY_DATA_WIDTH 32
#define MASTER_NON_SEC_NMR_PARAMETERS_INIT_DELAY_DO_TEST_BENCH_WIRING 0
#define MASTER_NON_SEC_NMR_PARAMETERS_INIT_DELAY_DRIVEN_SIM_VALUE 0
#define MASTER_NON_SEC_NMR_PARAMETERS_INIT_DELAY_EDGE_TYPE NONE
#define MASTER_NON_SEC_NMR_PARAMETERS_INIT_DELAY_FREQ 50000000
#define MASTER_NON_SEC_NMR_PARAMETERS_INIT_DELAY_HAS_IN 0
#define MASTER_NON_SEC_NMR_PARAMETERS_INIT_DELAY_HAS_OUT 1
#define MASTER_NON_SEC_NMR_PARAMETERS_INIT_DELAY_HAS_TRI 0
#define MASTER_NON_SEC_NMR_PARAMETERS_INIT_DELAY_IRQ_TYPE NONE
#define MASTER_NON_SEC_NMR_PARAMETERS_INIT_DELAY_RESET_VALUE 0

/*
 * Macros for device 'nmr_parameters_echoes_per_scan', class 'altera_avalon_pio'
 * Path to the device is from the master group 'master_non_sec'.
 * The macros are prefixed with 'MASTER_NON_SEC_NMR_PARAMETERS_ECHOES_PER_SCAN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_NON_SEC_NMR_PARAMETERS_ECHOES_PER_SCAN_COMPONENT_TYPE altera_avalon_pio
#define MASTER_NON_SEC_NMR_PARAMETERS_ECHOES_PER_SCAN_COMPONENT_NAME nmr_parameters_echoes_per_scan
#define MASTER_NON_SEC_NMR_PARAMETERS_ECHOES_PER_SCAN_BASE 0x2a0
#define MASTER_NON_SEC_NMR_PARAMETERS_ECHOES_PER_SCAN_SPAN 16
#define MASTER_NON_SEC_NMR_PARAMETERS_ECHOES_PER_SCAN_END 0x2af
#define MASTER_NON_SEC_NMR_PARAMETERS_ECHOES_PER_SCAN_BIT_CLEARING_EDGE_REGISTER 0
#define MASTER_NON_SEC_NMR_PARAMETERS_ECHOES_PER_SCAN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MASTER_NON_SEC_NMR_PARAMETERS_ECHOES_PER_SCAN_CAPTURE 0
#define MASTER_NON_SEC_NMR_PARAMETERS_ECHOES_PER_SCAN_DATA_WIDTH 32
#define MASTER_NON_SEC_NMR_PARAMETERS_ECHOES_PER_SCAN_DO_TEST_BENCH_WIRING 0
#define MASTER_NON_SEC_NMR_PARAMETERS_ECHOES_PER_SCAN_DRIVEN_SIM_VALUE 0
#define MASTER_NON_SEC_NMR_PARAMETERS_ECHOES_PER_SCAN_EDGE_TYPE NONE
#define MASTER_NON_SEC_NMR_PARAMETERS_ECHOES_PER_SCAN_FREQ 50000000
#define MASTER_NON_SEC_NMR_PARAMETERS_ECHOES_PER_SCAN_HAS_IN 0
#define MASTER_NON_SEC_NMR_PARAMETERS_ECHOES_PER_SCAN_HAS_OUT 1
#define MASTER_NON_SEC_NMR_PARAMETERS_ECHOES_PER_SCAN_HAS_TRI 0
#define MASTER_NON_SEC_NMR_PARAMETERS_ECHOES_PER_SCAN_IRQ_TYPE NONE
#define MASTER_NON_SEC_NMR_PARAMETERS_ECHOES_PER_SCAN_RESET_VALUE 0

/*
 * Macros for device 'nmr_parameters_delay_sig', class 'altera_avalon_pio'
 * Path to the device is from the master group 'master_non_sec'.
 * The macros are prefixed with 'MASTER_NON_SEC_NMR_PARAMETERS_DELAY_SIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_SIG_COMPONENT_TYPE altera_avalon_pio
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_SIG_COMPONENT_NAME nmr_parameters_delay_sig
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_SIG_BASE 0x2b0
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_SIG_SPAN 16
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_SIG_END 0x2bf
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_SIG_BIT_CLEARING_EDGE_REGISTER 0
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_SIG_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_SIG_CAPTURE 0
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_SIG_DATA_WIDTH 32
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_SIG_DO_TEST_BENCH_WIRING 0
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_SIG_DRIVEN_SIM_VALUE 0
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_SIG_EDGE_TYPE NONE
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_SIG_FREQ 50000000
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_SIG_HAS_IN 0
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_SIG_HAS_OUT 1
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_SIG_HAS_TRI 0
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_SIG_IRQ_TYPE NONE
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_SIG_RESET_VALUE 16

/*
 * Macros for device 'nmr_parameters_delay_nosig', class 'altera_avalon_pio'
 * Path to the device is from the master group 'master_non_sec'.
 * The macros are prefixed with 'MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_COMPONENT_TYPE altera_avalon_pio
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_COMPONENT_NAME nmr_parameters_delay_nosig
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_BASE 0x2c0
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_SPAN 16
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_END 0x2cf
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_BIT_CLEARING_EDGE_REGISTER 0
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_CAPTURE 0
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_DATA_WIDTH 32
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_DO_TEST_BENCH_WIRING 0
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_DRIVEN_SIM_VALUE 0
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_EDGE_TYPE NONE
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_FREQ 50000000
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_HAS_IN 0
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_HAS_OUT 1
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_HAS_TRI 0
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_IRQ_TYPE NONE
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_RESET_VALUE 16

/*
 * Macros for device 'adc_fifo_mem_out', class 'altera_avalon_fifo'
 * Path to the device is from the master group 'master_non_sec'.
 * The macros are prefixed with 'MASTER_NON_SEC_ADC_FIFO_MEM_OUT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_COMPONENT_TYPE altera_avalon_fifo
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_COMPONENT_NAME adc_fifo_mem
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_BASE 0x2d0
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_SPAN 8
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_END 0x2d7
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_AVALONMM_AVALONMM_DATA_WIDTH 32
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_AVALONMM_AVALONST_DATA_WIDTH 32
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_BITS_PER_SYMBOL 16
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_CHANNEL_WIDTH 0
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_ERROR_WIDTH 0
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_FIFO_DEPTH 8192
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_SINGLE_CLOCK_MODE 0
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_SYMBOLS_PER_BEAT 2
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_USE_AVALONMM_READ_SLAVE 1
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_USE_AVALONMM_WRITE_SLAVE 0
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_USE_AVALONST_SINK 1
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_USE_AVALONST_SOURCE 0
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_USE_BACKPRESSURE 1
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_USE_IRQ 0
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_USE_PACKET 0
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_USE_READ_CONTROL 1
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_USE_REGISTER 0
#define MASTER_NON_SEC_ADC_FIFO_MEM_OUT_USE_WRITE_CONTROL 0

/*
 * Macros for device 'nmr_parameters_delay_nosig_t1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'master_non_sec'.
 * The macros are prefixed with 'MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_T1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_T1_COMPONENT_TYPE altera_avalon_pio
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_T1_COMPONENT_NAME nmr_parameters_delay_nosig_t1
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_T1_BASE 0x2e0
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_T1_SPAN 16
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_T1_END 0x2ef
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_T1_BIT_CLEARING_EDGE_REGISTER 0
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_T1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_T1_CAPTURE 0
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_T1_DATA_WIDTH 32
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_T1_DO_TEST_BENCH_WIRING 0
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_T1_DRIVEN_SIM_VALUE 0
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_T1_EDGE_TYPE NONE
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_T1_FREQ 50000000
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_T1_HAS_IN 0
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_T1_HAS_OUT 1
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_T1_HAS_TRI 0
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_T1_IRQ_TYPE NONE
#define MASTER_NON_SEC_NMR_PARAMETERS_DELAY_NOSIG_T1_RESET_VALUE 16

/*
 * Macros for device 'nmr_parameters_pulse_180deg_t1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'master_non_sec'.
 * The macros are prefixed with 'MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_T1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_T1_COMPONENT_TYPE altera_avalon_pio
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_T1_COMPONENT_NAME nmr_parameters_pulse_180deg_t1
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_T1_BASE 0x2f0
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_T1_SPAN 16
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_T1_END 0x2ff
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_T1_BIT_CLEARING_EDGE_REGISTER 0
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_T1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_T1_CAPTURE 0
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_T1_DATA_WIDTH 32
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_T1_DO_TEST_BENCH_WIRING 0
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_T1_DRIVEN_SIM_VALUE 0
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_T1_EDGE_TYPE NONE
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_T1_FREQ 50000000
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_T1_HAS_IN 0
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_T1_HAS_OUT 1
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_T1_HAS_TRI 0
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_T1_IRQ_TYPE NONE
#define MASTER_NON_SEC_NMR_PARAMETERS_PULSE_180DEG_T1_RESET_VALUE 16

/*
 * Macros for device 'pll_nmr_reconfig', class 'altera_pll_reconfig'
 * Path to the device is from the master group 'master_non_sec'.
 * The macros are prefixed with 'MASTER_NON_SEC_PLL_NMR_RECONFIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_NON_SEC_PLL_NMR_RECONFIG_COMPONENT_TYPE altera_pll_reconfig
#define MASTER_NON_SEC_PLL_NMR_RECONFIG_COMPONENT_NAME pll_nmr_reconfig
#define MASTER_NON_SEC_PLL_NMR_RECONFIG_BASE 0x300
#define MASTER_NON_SEC_PLL_NMR_RECONFIG_SPAN 256
#define MASTER_NON_SEC_PLL_NMR_RECONFIG_END 0x3ff

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'master_non_sec'.
 * The macros are prefixed with 'MASTER_NON_SEC_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_NON_SEC_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define MASTER_NON_SEC_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define MASTER_NON_SEC_SYSID_QSYS_BASE 0x10000
#define MASTER_NON_SEC_SYSID_QSYS_SPAN 8
#define MASTER_NON_SEC_SYSID_QSYS_END 0x10007
#define MASTER_NON_SEC_SYSID_QSYS_ID 2899645186
#define MASTER_NON_SEC_SYSID_QSYS_TIMESTAMP 1521172617

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'master_non_sec'.
 * The macros are prefixed with 'MASTER_NON_SEC_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_NON_SEC_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define MASTER_NON_SEC_JTAG_UART_COMPONENT_NAME jtag_uart
#define MASTER_NON_SEC_JTAG_UART_BASE 0x20000
#define MASTER_NON_SEC_JTAG_UART_SPAN 8
#define MASTER_NON_SEC_JTAG_UART_END 0x20007
#define MASTER_NON_SEC_JTAG_UART_READ_DEPTH 64
#define MASTER_NON_SEC_JTAG_UART_READ_THRESHOLD 8
#define MASTER_NON_SEC_JTAG_UART_WRITE_DEPTH 64
#define MASTER_NON_SEC_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define MASTER_SECURE_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define MASTER_SECURE_HPS_0_AXI_SDRAM_BASE 0x0
#define MASTER_SECURE_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define MASTER_SECURE_HPS_0_AXI_SDRAM_END 0x7fffffff
#define MASTER_SECURE_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define MASTER_SECURE_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define MASTER_SECURE_HPS_0_AXI_SDRAM_WRITABLE 1
#define MASTER_SECURE_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define MASTER_SECURE_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define MASTER_SECURE_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define MASTER_SECURE_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define MASTER_SECURE_HPS_0_GMAC0_BASE 0xff700000
#define MASTER_SECURE_HPS_0_GMAC0_SPAN 8192
#define MASTER_SECURE_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define MASTER_SECURE_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define MASTER_SECURE_HPS_0_GMAC1_BASE 0xff702000
#define MASTER_SECURE_HPS_0_GMAC1_SPAN 8192
#define MASTER_SECURE_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define MASTER_SECURE_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define MASTER_SECURE_HPS_0_SDMMC_BASE 0xff704000
#define MASTER_SECURE_HPS_0_SDMMC_SPAN 4096
#define MASTER_SECURE_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define MASTER_SECURE_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define MASTER_SECURE_HPS_0_QSPI_BASE 0xff705000
#define MASTER_SECURE_HPS_0_QSPI_SPAN 256
#define MASTER_SECURE_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define MASTER_SECURE_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define MASTER_SECURE_HPS_0_FPGAMGR_BASE 0xff706000
#define MASTER_SECURE_HPS_0_FPGAMGR_SPAN 4096
#define MASTER_SECURE_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define MASTER_SECURE_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define MASTER_SECURE_HPS_0_GPIO0_BASE 0xff708000
#define MASTER_SECURE_HPS_0_GPIO0_SPAN 256
#define MASTER_SECURE_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define MASTER_SECURE_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define MASTER_SECURE_HPS_0_GPIO1_BASE 0xff709000
#define MASTER_SECURE_HPS_0_GPIO1_SPAN 256
#define MASTER_SECURE_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define MASTER_SECURE_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define MASTER_SECURE_HPS_0_GPIO2_BASE 0xff70a000
#define MASTER_SECURE_HPS_0_GPIO2_SPAN 256
#define MASTER_SECURE_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define MASTER_SECURE_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define MASTER_SECURE_HPS_0_L3REGS_BASE 0xff800000
#define MASTER_SECURE_HPS_0_L3REGS_SPAN 4096
#define MASTER_SECURE_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define MASTER_SECURE_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define MASTER_SECURE_HPS_0_NAND0_BASE 0xff900000
#define MASTER_SECURE_HPS_0_NAND0_SPAN 65536
#define MASTER_SECURE_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_USB0_COMPONENT_TYPE usb
#define MASTER_SECURE_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define MASTER_SECURE_HPS_0_USB0_BASE 0xffb00000
#define MASTER_SECURE_HPS_0_USB0_SPAN 262144
#define MASTER_SECURE_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_USB1_COMPONENT_TYPE usb
#define MASTER_SECURE_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define MASTER_SECURE_HPS_0_USB1_BASE 0xffb40000
#define MASTER_SECURE_HPS_0_USB1_SPAN 262144
#define MASTER_SECURE_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define MASTER_SECURE_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define MASTER_SECURE_HPS_0_DCAN0_BASE 0xffc00000
#define MASTER_SECURE_HPS_0_DCAN0_SPAN 4096
#define MASTER_SECURE_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define MASTER_SECURE_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define MASTER_SECURE_HPS_0_DCAN1_BASE 0xffc01000
#define MASTER_SECURE_HPS_0_DCAN1_SPAN 4096
#define MASTER_SECURE_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define MASTER_SECURE_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define MASTER_SECURE_HPS_0_UART0_BASE 0xffc02000
#define MASTER_SECURE_HPS_0_UART0_SPAN 256
#define MASTER_SECURE_HPS_0_UART0_END 0xffc020ff
#define MASTER_SECURE_HPS_0_UART0_FIFO_DEPTH 128
#define MASTER_SECURE_HPS_0_UART0_FIFO_HWFC 0
#define MASTER_SECURE_HPS_0_UART0_FIFO_MODE 1
#define MASTER_SECURE_HPS_0_UART0_FIFO_SWFC 0
#define MASTER_SECURE_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define MASTER_SECURE_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define MASTER_SECURE_HPS_0_UART1_BASE 0xffc03000
#define MASTER_SECURE_HPS_0_UART1_SPAN 256
#define MASTER_SECURE_HPS_0_UART1_END 0xffc030ff
#define MASTER_SECURE_HPS_0_UART1_FIFO_DEPTH 128
#define MASTER_SECURE_HPS_0_UART1_FIFO_HWFC 0
#define MASTER_SECURE_HPS_0_UART1_FIFO_MODE 1
#define MASTER_SECURE_HPS_0_UART1_FIFO_SWFC 0
#define MASTER_SECURE_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define MASTER_SECURE_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define MASTER_SECURE_HPS_0_I2C0_BASE 0xffc04000
#define MASTER_SECURE_HPS_0_I2C0_SPAN 256
#define MASTER_SECURE_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define MASTER_SECURE_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define MASTER_SECURE_HPS_0_I2C1_BASE 0xffc05000
#define MASTER_SECURE_HPS_0_I2C1_SPAN 256
#define MASTER_SECURE_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define MASTER_SECURE_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define MASTER_SECURE_HPS_0_I2C2_BASE 0xffc06000
#define MASTER_SECURE_HPS_0_I2C2_SPAN 256
#define MASTER_SECURE_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define MASTER_SECURE_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define MASTER_SECURE_HPS_0_I2C3_BASE 0xffc07000
#define MASTER_SECURE_HPS_0_I2C3_SPAN 256
#define MASTER_SECURE_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define MASTER_SECURE_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define MASTER_SECURE_HPS_0_TIMER0_BASE 0xffc08000
#define MASTER_SECURE_HPS_0_TIMER0_SPAN 256
#define MASTER_SECURE_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define MASTER_SECURE_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define MASTER_SECURE_HPS_0_TIMER1_BASE 0xffc09000
#define MASTER_SECURE_HPS_0_TIMER1_SPAN 256
#define MASTER_SECURE_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define MASTER_SECURE_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define MASTER_SECURE_HPS_0_SDRCTL_BASE 0xffc25000
#define MASTER_SECURE_HPS_0_SDRCTL_SPAN 4096
#define MASTER_SECURE_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define MASTER_SECURE_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define MASTER_SECURE_HPS_0_TIMER2_BASE 0xffd00000
#define MASTER_SECURE_HPS_0_TIMER2_SPAN 256
#define MASTER_SECURE_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define MASTER_SECURE_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define MASTER_SECURE_HPS_0_TIMER3_BASE 0xffd01000
#define MASTER_SECURE_HPS_0_TIMER3_SPAN 256
#define MASTER_SECURE_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define MASTER_SECURE_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define MASTER_SECURE_HPS_0_CLKMGR_BASE 0xffd04000
#define MASTER_SECURE_HPS_0_CLKMGR_SPAN 4096
#define MASTER_SECURE_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define MASTER_SECURE_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define MASTER_SECURE_HPS_0_RSTMGR_BASE 0xffd05000
#define MASTER_SECURE_HPS_0_RSTMGR_SPAN 256
#define MASTER_SECURE_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define MASTER_SECURE_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define MASTER_SECURE_HPS_0_SYSMGR_BASE 0xffd08000
#define MASTER_SECURE_HPS_0_SYSMGR_SPAN 1024
#define MASTER_SECURE_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define MASTER_SECURE_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define MASTER_SECURE_HPS_0_DMA_BASE 0xffe01000
#define MASTER_SECURE_HPS_0_DMA_SPAN 4096
#define MASTER_SECURE_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_SPIM0_COMPONENT_TYPE spi
#define MASTER_SECURE_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define MASTER_SECURE_HPS_0_SPIM0_BASE 0xfff00000
#define MASTER_SECURE_HPS_0_SPIM0_SPAN 256
#define MASTER_SECURE_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_SPIM1_COMPONENT_TYPE spi
#define MASTER_SECURE_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define MASTER_SECURE_HPS_0_SPIM1_BASE 0xfff01000
#define MASTER_SECURE_HPS_0_SPIM1_SPAN 256
#define MASTER_SECURE_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define MASTER_SECURE_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define MASTER_SECURE_HPS_0_TIMER_BASE 0xfffec600
#define MASTER_SECURE_HPS_0_TIMER_SPAN 256
#define MASTER_SECURE_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define MASTER_SECURE_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define MASTER_SECURE_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define MASTER_SECURE_HPS_0_ARM_GIC_0_SPAN 4096
#define MASTER_SECURE_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define MASTER_SECURE_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define MASTER_SECURE_HPS_0_L2_BASE 0xfffef000
#define MASTER_SECURE_HPS_0_L2_SPAN 4096
#define MASTER_SECURE_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define MASTER_SECURE_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define MASTER_SECURE_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define MASTER_SECURE_HPS_0_AXI_OCRAM_SPAN 65536
#define MASTER_SECURE_HPS_0_AXI_OCRAM_END 0xffffffff
#define MASTER_SECURE_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define MASTER_SECURE_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define MASTER_SECURE_HPS_0_AXI_OCRAM_WRITABLE 1
#define MASTER_SECURE_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define MASTER_SECURE_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define MASTER_SECURE_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16


#endif /* _ALTERA_SOC_SYSTEM_H_ */
